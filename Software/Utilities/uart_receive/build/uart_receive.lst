ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"uart_receive.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB125:
  36              	.LBI125:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE125:
  41              	.LBB126:
  42              	.LBI126:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 4


  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE126:
  47              	.LBB127:
  48              	.LBI127:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 5


  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 6


  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE127:
  53              	.LBB128:
  54              	.LBI128:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 7


  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 8


  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE128:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._Z7getDatav,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	_Z7getDatav
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_Z7getDatav:
  76              	.LFB4693:
  77              		.file 6 "uart_receive.cpp"
   1:uart_receive.cpp **** #include "daisy_seed.h"
   2:uart_receive.cpp ****  #include "daisysp.h"
   3:uart_receive.cpp **** #include "pentaPianta.h"
   4:uart_receive.cpp **** #include "Effect.h"
   5:uart_receive.cpp **** using namespace daisy;
   6:uart_receive.cpp **** using namespace daisysp;
   7:uart_receive.cpp **** 
   8:uart_receive.cpp **** UartHandler uart;
   9:uart_receive.cpp **** UartHandler::Config config;
  10:uart_receive.cpp **** DaisySeed hw;
  11:uart_receive.cpp **** pentaPianta penta[3]; // Array of pentaPianta objects
  12:uart_receive.cpp **** 
  13:uart_receive.cpp **** Effect effect[4]; // Array of Effect objects
  14:uart_receive.cpp **** void getData()
  15:uart_receive.cpp **** {
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 9


  78              		.loc 6 15 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  16:uart_receive.cpp **** 	char start_bit = 'S';
  82              		.loc 6 16 2 view .LVU11
  15:uart_receive.cpp **** 	char start_bit = 'S';
  83              		.loc 6 15 1 is_stmt 0 view .LVU12
  84 0000 70B5     		push	{r4, r5, r6, lr}
  85              		.cfi_def_cfa_offset 16
  86              		.cfi_offset 4, -16
  87              		.cfi_offset 5, -12
  88              		.cfi_offset 6, -8
  89              		.cfi_offset 14, -4
  90              		.loc 6 16 7 view .LVU13
  91 0002 5323     		movs	r3, #83
  15:uart_receive.cpp **** 	char start_bit = 'S';
  92              		.loc 6 15 1 view .LVU14
  93 0004 82B0     		sub	sp, sp, #8
  94              		.cfi_def_cfa_offset 24
  95              		.loc 6 16 7 view .LVU15
  96 0006 8DF80330 		strb	r3, [sp, #3]
  17:uart_receive.cpp **** 	uint8_t data[3];
  97              		.loc 6 17 2 is_stmt 1 view .LVU16
  18:uart_receive.cpp **** 	while (start_bit != 'B') // Wait for the start bit
  98              		.loc 6 18 2 view .LVU17
  99              		.loc 6 18 19 view .LVU18
 100              	.L4:
  19:uart_receive.cpp **** 	{
  20:uart_receive.cpp **** 		uart.BlockingReceive((uint8_t*)&start_bit, sizeof(start_bit), 100);
 101              		.loc 6 20 3 view .LVU19
 102              		.loc 6 20 23 is_stmt 0 view .LVU20
 103 000a 6423     		movs	r3, #100
 104 000c 0122     		movs	r2, #1
 105 000e 0DF10301 		add	r1, sp, #3
 106 0012 2148     		ldr	r0, .L13
 107 0014 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 108              	.LVL1:
  17:uart_receive.cpp **** 	while (start_bit != 'B') // Wait for the start bit
 109              		.loc 6 17 2 is_stmt 1 view .LVU21
  18:uart_receive.cpp **** 	while (start_bit != 'B') // Wait for the start bit
 110              		.loc 6 18 2 view .LVU22
  18:uart_receive.cpp **** 	while (start_bit != 'B') // Wait for the start bit
 111              		.loc 6 18 19 view .LVU23
 112 0018 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 113 001c 422B     		cmp	r3, #66
 114 001e F4D1     		bne	.L4
 115 0020 1E4D     		ldr	r5, .L13+4
 116 0022 2C46     		mov	r4, r5
 117 0024 05F13006 		add	r6, r5, #48
 118              	.L6:
 119              	.LBB129:
  21:uart_receive.cpp **** 	}
  22:uart_receive.cpp **** 	for (size_t i = 0; i < 3; i++)
  23:uart_receive.cpp **** 	{
  24:uart_receive.cpp **** 		uart.BlockingReceive(data, 3, 100); // Receive 3 bytes of data with a timeout of 1 second
 120              		.loc 6 24 3 view .LVU24
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 10


 121              		.loc 6 24 23 is_stmt 0 view .LVU25
 122 0028 6423     		movs	r3, #100
 123 002a 0322     		movs	r2, #3
 124 002c 01A9     		add	r1, sp, #4
 125 002e 1A48     		ldr	r0, .L13
 126 0030 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 127              	.LVL2:
  25:uart_receive.cpp **** 		if (data[0] == 0)
 128              		.loc 6 25 3 is_stmt 1 view .LVU26
  26:uart_receive.cpp **** 		{
  27:uart_receive.cpp **** 			penta[i].zeroCount(); // Set the first parameter of pentaPianta object i
  28:uart_receive.cpp **** 		}
  29:uart_receive.cpp **** 		else
  30:uart_receive.cpp **** 		{
  31:uart_receive.cpp **** 			penta[i].incCount();					  // Increment the count of the number of times the sensor has been rea
 129              		.loc 6 31 4 view .LVU27
 130              	.LBB130:
 131              	.LBI130:
 132              		.file 7 "pentaPianta.h"
   1:pentaPianta.h **** //
   2:pentaPianta.h **** // Created by flipb on 06/03/2025.
   3:pentaPianta.h **** //
   4:pentaPianta.h **** 
   5:pentaPianta.h **** #ifndef PENTAPIANTA_H
   6:pentaPianta.h **** #define PENTAPIANTA_H
   7:pentaPianta.h **** #include <stdint.h>
   8:pentaPianta.h **** 
   9:pentaPianta.h **** 
  10:pentaPianta.h **** class pentaPianta {
  11:pentaPianta.h **** public:
  12:pentaPianta.h ****     pentaPianta();
  13:pentaPianta.h ****     pentaPianta(int* soglieI,int f0I);
  14:pentaPianta.h ****     int begin(int* soglieI, int f0I);
  15:pentaPianta.h **** 
  16:pentaPianta.h ****     uint16_t discFreq(uint16_t value);
  17:pentaPianta.h **** 
  18:pentaPianta.h ****     uint16_t analogFreq(uint16_t value);
  19:pentaPianta.h ****     void incCount() { _count++; } //increment the count of the number of times the sensor has been 
 133              		.loc 7 19 10 view .LVU28
 134              	.LBB131:
 135              		.loc 7 19 23 view .LVU29
 136              	.LBE131:
 137              	.LBE130:
  25:uart_receive.cpp **** 		{
 138              		.loc 6 25 3 is_stmt 0 view .LVU30
 139 0034 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 140              	.LBB133:
 141              	.LBB134:
  20:pentaPianta.h ****     void zeroCount() { _count = 0; } //reset the count of the number of times the sensor has been r
 142              		.loc 7 20 31 view .LVU31
 143 0038 1A46     		mov	r2, r3
 144              	.LBE134:
 145              	.LBE133:
  25:uart_receive.cpp **** 		{
 146              		.loc 6 25 3 view .LVU32
 147 003a 0BB1     		cbz	r3, .L5
 148              	.LBB135:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 11


 149              	.LBB132:
  19:pentaPianta.h ****     void zeroCount() { _count = 0; } //reset the count of the number of times the sensor has been r
 150              		.loc 7 19 29 view .LVU33
 151 003c A268     		ldr	r2, [r4, #8]
 152 003e 0132     		adds	r2, r2, #1
 153              	.L5:
 154 0040 A260     		str	r2, [r4, #8]
  19:pentaPianta.h ****     void zeroCount() { _count = 0; } //reset the count of the number of times the sensor has been r
 155              		.loc 7 19 29 view .LVU34
 156              	.LBE132:
 157              	.LBE135:
  32:uart_receive.cpp **** 		}
  33:uart_receive.cpp **** 		penta[i].setRawValue(((uint16_t)data[2]<<8)+(uint16_t)data[1]);
 158              		.loc 6 33 3 is_stmt 1 discriminator 2 view .LVU35
 159              	.LVL3:
 160              	.LBB136:
 161              	.LBI136:
  21:pentaPianta.h ****     uint16_t getRaw() {return _raw_value;}
  22:pentaPianta.h ****     void setRawValue(uint16_t value) { _raw_value = value; } //set the raw value of the sensor
 162              		.loc 7 22 10 discriminator 2 view .LVU36
 163              	.LBB137:
 164              		.loc 7 22 40 discriminator 2 view .LVU37
 165              	.LBE137:
 166              	.LBE136:
  22:uart_receive.cpp **** 	{
 167              		.loc 6 22 23 is_stmt 0 discriminator 2 view .LVU38
 168 0042 1034     		adds	r4, r4, #16
 169              		.loc 6 33 41 discriminator 2 view .LVU39
 170 0044 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 171              		.loc 6 33 63 discriminator 2 view .LVU40
 172 0048 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
  22:uart_receive.cpp **** 	{
 173              		.loc 6 22 23 discriminator 2 view .LVU41
 174 004c B442     		cmp	r4, r6
 175              		.loc 6 33 23 discriminator 2 view .LVU42
 176 004e 03EB0123 		add	r3, r3, r1, lsl #8
 177              	.LBB139:
 178              	.LBB138:
 179              		.loc 7 22 51 discriminator 2 view .LVU43
 180 0052 24F8043C 		strh	r3, [r4, #-4]	@ movhi
 181              	.LVL4:
 182              		.loc 7 22 51 discriminator 2 view .LVU44
 183              	.LBE138:
 184              	.LBE139:
  22:uart_receive.cpp **** 	{
 185              		.loc 6 22 2 is_stmt 1 discriminator 2 view .LVU45
  22:uart_receive.cpp **** 	{
 186              		.loc 6 22 23 discriminator 2 view .LVU46
 187 0056 E7D1     		bne	.L6
 188 0058 0024     		movs	r4, #0
 189 005a 114E     		ldr	r6, .L13+8
 190              	.L7:
 191              	.LBE129:
 192              	.LBB140:
  34:uart_receive.cpp **** 	}
  35:uart_receive.cpp **** 		for (size_t i = 0; i < 4; i++)
  36:uart_receive.cpp **** 	{
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 12


  37:uart_receive.cpp **** 		uart.BlockingReceive(data, 3, 100); // Receive 3 bytes of data with a timeout of 1 second
 193              		.loc 6 37 3 view .LVU47
 194              		.loc 6 37 23 is_stmt 0 view .LVU48
 195 005c 6423     		movs	r3, #100
 196 005e 0322     		movs	r2, #3
 197 0060 01A9     		add	r1, sp, #4
 198 0062 0D48     		ldr	r0, .L13
 199 0064 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 200              	.LVL5:
  38:uart_receive.cpp **** 		if (data[0] == 0)
 201              		.loc 6 38 3 is_stmt 1 view .LVU49
 202 0068 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 203 006c 06EB8400 		add	r0, r6, r4, lsl #2
  39:uart_receive.cpp **** 		{
  40:uart_receive.cpp **** 			effect[i].setGate(false); // Set the first parameter of pentaPianta object i
  41:uart_receive.cpp **** 		}
  42:uart_receive.cpp **** 		else
  43:uart_receive.cpp **** 		{
  44:uart_receive.cpp **** 			effect[i].setGate(true);					  // Increment the count of the number of times the sensor has been
  45:uart_receive.cpp **** 		}
  46:uart_receive.cpp **** 		penta[i].setRawValue(((uint16_t)data[2]<<8)+(uint16_t)data[1]);
 204              		.loc 6 46 41 is_stmt 0 view .LVU50
 205 0070 9DF806C0 		ldrb	ip, [sp, #6]	@ zero_extendqisi2
  38:uart_receive.cpp **** 		if (data[0] == 0)
 206              		.loc 6 38 3 view .LVU51
 207 0074 003A     		subs	r2, r2, #0
 208              	.LBB141:
 209              	.LBB142:
 210              		.loc 7 22 51 view .LVU52
 211 0076 05EB4401 		add	r1, r5, r4, lsl #1
 212              	.LBE142:
 213              	.LBE141:
 214              		.loc 6 46 63 view .LVU53
 215 007a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
  35:uart_receive.cpp **** 	{
 216              		.loc 6 35 24 view .LVU54
 217 007e 04F10804 		add	r4, r4, #8
  38:uart_receive.cpp **** 		if (data[0] == 0)
 218              		.loc 6 38 3 view .LVU55
 219 0082 18BF     		it	ne
 220 0084 0122     		movne	r2, #1
 221              		.loc 6 46 23 view .LVU56
 222 0086 03EB0C23 		add	r3, r3, ip, lsl #8
  35:uart_receive.cpp **** 	{
 223              		.loc 6 35 24 view .LVU57
 224 008a 202C     		cmp	r4, #32
  38:uart_receive.cpp **** 		if (data[0] == 0)
 225              		.loc 6 38 3 view .LVU58
 226 008c 0277     		strb	r2, [r0, #28]
 227              		.loc 6 46 3 is_stmt 1 view .LVU59
 228              	.LVL6:
 229              	.LBB144:
 230              	.LBI141:
 231              		.loc 7 22 10 view .LVU60
 232              	.LBB143:
 233              		.loc 7 22 40 view .LVU61
 234              		.loc 7 22 51 is_stmt 0 view .LVU62
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 13


 235 008e 8B81     		strh	r3, [r1, #12]	@ movhi
 236              	.LVL7:
 237              		.loc 7 22 51 view .LVU63
 238              	.LBE143:
 239              	.LBE144:
  35:uart_receive.cpp **** 	{
 240              		.loc 6 35 3 is_stmt 1 view .LVU64
  35:uart_receive.cpp **** 	{
 241              		.loc 6 35 24 view .LVU65
 242 0090 E4D1     		bne	.L7
 243              	.LBE140:
  47:uart_receive.cpp **** 	}
  48:uart_receive.cpp **** }
 244              		.loc 6 48 1 is_stmt 0 view .LVU66
 245 0092 02B0     		add	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247              		@ sp needed
 248 0094 70BD     		pop	{r4, r5, r6, pc}
 249              	.L14:
 250 0096 00BF     		.align	2
 251              	.L13:
 252 0098 00000000 		.word	.LANCHOR0
 253 009c 00000000 		.word	.LANCHOR1
 254 00a0 00000000 		.word	.LANCHOR2
 255              		.cfi_endproc
 256              	.LFE4693:
 258              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 259              		.align	2
 260              	.LC3:
 261 0000 73746172 		.ascii	"startLoop\000"
 261      744C6F6F 
 261      7000
 262 000a 0000     		.align	2
 263              	.LC4:
 264 000c 2070656E 		.ascii	" penta %d : %d\000"
 264      74612025 
 264      64203A20 
 264      256400
 265 001b 00       		.align	2
 266              	.LC5:
 267 001c 65666665 		.ascii	"effect %d gate %f\000"
 267      63742025 
 267      64206761 
 267      74652025 
 267      6600
 268 002e 0000     		.align	2
 269              	.LC6:
 270 0030 65666665 		.ascii	"effect %d value %f\000"
 270      63742025 
 270      64207661 
 270      6C756520 
 270      256600
 271              		.section	.text.startup.main,"ax",%progbits
 272              		.align	1
 273              		.p2align 2,,3
 274              		.global	main
 275              		.syntax unified
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 14


 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv5-d16
 280              	main:
 281              	.LFB4694:
  49:uart_receive.cpp **** 
  50:uart_receive.cpp **** int main(void)
  51:uart_receive.cpp **** {
 282              		.loc 6 51 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 0, uses_anonymous_args = 0
  52:uart_receive.cpp **** 	hw.Init();
 286              		.loc 6 52 2 view .LVU68
  51:uart_receive.cpp **** 	hw.Init();
 287              		.loc 6 51 1 is_stmt 0 view .LVU69
 288 0000 30B5     		push	{r4, r5, lr}
 289              		.cfi_def_cfa_offset 12
 290              		.cfi_offset 4, -12
 291              		.cfi_offset 5, -8
 292              		.cfi_offset 14, -4
 293              		.loc 6 52 9 view .LVU70
 294 0002 0021     		movs	r1, #0
  51:uart_receive.cpp **** 	hw.Init();
 295              		.loc 6 51 1 view .LVU71
 296 0004 83B0     		sub	sp, sp, #12
 297              		.cfi_def_cfa_offset 24
 298              		.loc 6 52 9 view .LVU72
 299 0006 2648     		ldr	r0, .L25
  53:uart_receive.cpp **** 	Pin pin_rx = {PORTB, 7};
  54:uart_receive.cpp **** 	Pin pin_tx = {PORTB, 6};
  55:uart_receive.cpp **** 	config.baudrate = 9600 ;
  56:uart_receive.cpp ****  	config.periph   = UartHandler::Config::Peripheral::USART_1;
 300              		.loc 6 56 19 view .LVU73
 301 0008 0024     		movs	r4, #0
  52:uart_receive.cpp **** 	Pin pin_rx = {PORTB, 7};
 302              		.loc 6 52 9 view .LVU74
 303 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 304              	.LVL8:
  53:uart_receive.cpp **** 	Pin pin_rx = {PORTB, 7};
 305              		.loc 6 53 2 is_stmt 1 view .LVU75
  54:uart_receive.cpp **** 	config.baudrate = 9600 ;
 306              		.loc 6 54 2 view .LVU76
  55:uart_receive.cpp ****  	config.periph   = UartHandler::Config::Peripheral::USART_1;
 307              		.loc 6 55 2 view .LVU77
 308              		.loc 6 56 3 view .LVU78
  57:uart_receive.cpp **** 	config.stopbits      = UartHandler::Config::StopBits::BITS_1;
 309              		.loc 6 57 2 view .LVU79
  58:uart_receive.cpp **** 	config.parity        = UartHandler::Config::Parity::NONE;
 310              		.loc 6 58 2 view .LVU80
  59:uart_receive.cpp **** 	config.mode          = UartHandler::Config::Mode::RX;
 311              		.loc 6 59 2 view .LVU81
  60:uart_receive.cpp **** 	config.wordlength    = UartHandler::Config::WordLength::BITS_8;
 312              		.loc 6 60 2 view .LVU82
  61:uart_receive.cpp **** 	config.pin_config.rx = pin_rx;//{DSY_GPIOB, 7};  // (USART_1 RX) Daisy pin 15
 313              		.loc 6 61 2 view .LVU83
 314              		.file 8 "../../libDaisy//src/daisy_core.h"
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 15


   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 16


  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 17


 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 18


 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 19


 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 20


 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     constexpr operator dsy_gpio_pin() const
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_gpio_pin{.port = static_cast<dsy_gpio_port>(port),
 315              		.loc 8 296 9 view .LVU84
  62:uart_receive.cpp **** 	config.pin_config.tx = pin_tx;//{DSY_GPIOB, 6};  // (USART_1 TX) Daisy pin 14
 316              		.loc 6 62 2 view .LVU85
 317              		.loc 8 296 9 view .LVU86
 318              		.loc 6 62 25 is_stmt 0 view .LVU87
 319 000e 2549     		ldr	r1, .L25+4
 320 0010 2548     		ldr	r0, .L25+8
  57:uart_receive.cpp **** 	config.parity        = UartHandler::Config::Parity::NONE;
 321              		.loc 6 57 23 view .LVU88
 322 0012 0123     		movs	r3, #1
  55:uart_receive.cpp ****  	config.periph   = UartHandler::Config::Peripheral::USART_1;
 323              		.loc 6 55 18 view .LVU89
 324 0014 4FF41652 		mov	r2, #9600
 325              		.loc 6 62 25 view .LVU90
 326 0018 0860     		str	r0, [r1]
  63:uart_receive.cpp **** 	uart.Init(config);
 327              		.loc 6 63 11 view .LVU91
 328 001a 2448     		ldr	r0, .L25+12
  60:uart_receive.cpp **** 	config.pin_config.rx = pin_rx;//{DSY_GPIOB, 7};  // (USART_1 RX) Daisy pin 15
 329              		.loc 6 60 23 view .LVU92
 330 001c 4B61     		str	r3, [r1, #20]
  55:uart_receive.cpp ****  	config.periph   = UartHandler::Config::Peripheral::USART_1;
 331              		.loc 6 55 18 view .LVU93
 332 001e 8A61     		str	r2, [r1, #24]
 333              		.loc 6 63 2 is_stmt 1 view .LVU94
  57:uart_receive.cpp **** 	config.parity        = UartHandler::Config::Parity::NONE;
 334              		.loc 6 57 23 is_stmt 0 view .LVU95
 335 0020 C1E90143 		strd	r4, r3, [r1, #4]
  59:uart_receive.cpp **** 	config.wordlength    = UartHandler::Config::WordLength::BITS_8;
 336              		.loc 6 59 23 view .LVU96
 337 0024 C1E90344 		strd	r4, r4, [r1, #12]
 338              		.loc 6 63 11 view .LVU97
 339 0028 FFF7FEFF 		bl	_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
 340              	.LVL9:
  64:uart_receive.cpp **** 	hw.StartLog(false);
 341              		.loc 6 64 2 is_stmt 1 view .LVU98
 342              	.LBB145:
 343              	.LBI145:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 21


  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 22


  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy//src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy//src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy//src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy//src/daisy_seed.h ****      */
 105:../../libDaisy//src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy//src/daisy_seed.h **** 
 107:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy//src/daisy_seed.h ****      */
 109:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy//src/daisy_seed.h **** 
 111:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy//src/daisy_seed.h ****      */
 113:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy//src/daisy_seed.h **** 
 115:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy//src/daisy_seed.h ****      */
 117:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy//src/daisy_seed.h ****     {
 120:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy//src/daisy_seed.h ****     }
 122:../../libDaisy//src/daisy_seed.h **** 
 123:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy//src/daisy_seed.h ****     */
 125:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../../libDaisy//src/daisy_seed.h ****     }
 130:../../libDaisy//src/daisy_seed.h **** 
 131:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../../libDaisy//src/daisy_seed.h ****     */
 133:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 344              		.loc 1 133 17 view .LVU99
 345              	.LBB146:
 134:../../libDaisy//src/daisy_seed.h ****     {
 135:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 346              		.loc 1 135 9 view .LVU100
 347              		.loc 1 135 22 is_stmt 0 view .LVU101
 348 002c 2046     		mov	r0, r4
 349 002e FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 350              	.LVL10:
 351              		.loc 1 135 22 view .LVU102
 352              	.LBE146:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 23


 353              	.LBE145:
  65:uart_receive.cpp **** 	uint8_t start_bit = 'S';
 354              		.loc 6 65 2 is_stmt 1 view .LVU103
 355              		.loc 6 65 10 is_stmt 0 view .LVU104
 356 0032 5323     		movs	r3, #83
 357 0034 8DF80730 		strb	r3, [sp, #7]
  66:uart_receive.cpp **** 	while (start_bit != 'I') // Wait for the start bit
 358              		.loc 6 66 2 is_stmt 1 view .LVU105
 359              		.loc 6 66 19 view .LVU106
 360              	.L16:
  67:uart_receive.cpp **** 	{ 
  68:uart_receive.cpp **** 		uart.BlockingReceive(&start_bit, sizeof(start_bit), 100);
 361              		.loc 6 68 3 view .LVU107
 362              		.loc 6 68 23 is_stmt 0 view .LVU108
 363 0038 6423     		movs	r3, #100
 364 003a 0122     		movs	r2, #1
 365 003c 0DF10701 		add	r1, sp, #7
 366 0040 1A48     		ldr	r0, .L25+12
 367 0042 FFF7FEFF 		bl	_ZN5daisy11UartHandler15BlockingReceiveEPhtm
 368              	.LVL11:
  66:uart_receive.cpp **** 	while (start_bit != 'I') // Wait for the start bit
 369              		.loc 6 66 2 is_stmt 1 view .LVU109
  66:uart_receive.cpp **** 	while (start_bit != 'I') // Wait for the start bit
 370              		.loc 6 66 19 view .LVU110
 371 0046 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 372 004a 492B     		cmp	r3, #73
 373 004c F4D1     		bne	.L16
 374              	.L18:
  69:uart_receive.cpp **** 	}
  70:uart_receive.cpp **** 	while (1)
 375              		.loc 6 70 2 view .LVU111
 376              	.LBB147:
  71:uart_receive.cpp **** 	{
  72:uart_receive.cpp **** 		hw.PrintLine ("startLoop");
 377              		.loc 6 72 3 view .LVU112
 378              	.LVL12:
 379              	.LBB148:
 380              	.LBI148:
 126:../../libDaisy//src/daisy_seed.h ****     {
 381              		.loc 1 126 17 view .LVU113
 382              	.LBB149:
 128:../../libDaisy//src/daisy_seed.h ****     }
 383              		.loc 1 128 23 is_stmt 0 view .LVU114
 384 004e 1848     		ldr	r0, .L25+16
 385              	.LBE149:
 386              	.LBE148:
 387              	.LBB151:
  73:uart_receive.cpp **** 		getData(); // Call the function to get data from the UART
  74:uart_receive.cpp **** 		for ( int i = 0; i < 3; i++){
 388              		.loc 6 74 13 view .LVU115
 389 0050 0024     		movs	r4, #0
 390 0052 184D     		ldr	r5, .L25+20
 391              	.LBE151:
 392              	.LBB160:
 393              	.LBB150:
 128:../../libDaisy//src/daisy_seed.h ****     }
 394              		.loc 1 128 23 view .LVU116
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 24


 395 0054 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 396              	.LVL13:
 128:../../libDaisy//src/daisy_seed.h ****     }
 397              		.loc 1 128 23 view .LVU117
 398              	.LBE150:
 399              	.LBE160:
  73:uart_receive.cpp **** 		getData(); // Call the function to get data from the UART
 400              		.loc 6 73 3 is_stmt 1 view .LVU118
  73:uart_receive.cpp **** 		getData(); // Call the function to get data from the UART
 401              		.loc 6 73 10 is_stmt 0 view .LVU119
 402 0058 FFF7FEFF 		bl	_Z7getDatav
 403              	.LVL14:
 404              		.loc 6 74 3 is_stmt 1 view .LVU120
 405              	.LBB161:
 406              		.loc 6 74 22 view .LVU121
 407              	.L17:
  75:uart_receive.cpp **** 			hw.PrintLine (" penta %d : %d",i, penta[i].getRaw());
 408              		.loc 6 75 4 discriminator 2 view .LVU122
 409              	.LBB152:
 410              	.LBI152:
  21:pentaPianta.h ****     void setRawValue(uint16_t value) { _raw_value = value; } //set the raw value of the sensor
 411              		.loc 7 21 14 discriminator 2 view .LVU123
 412              	.LBB153:
  21:pentaPianta.h ****     void setRawValue(uint16_t value) { _raw_value = value; } //set the raw value of the sensor
 413              		.loc 7 21 24 discriminator 2 view .LVU124
  21:pentaPianta.h ****     void setRawValue(uint16_t value) { _raw_value = value; } //set the raw value of the sensor
 414              		.loc 7 21 24 is_stmt 0 discriminator 2 view .LVU125
 415              	.LBE153:
 416              	.LBE152:
 417              	.LBB154:
 418              	.LBI154:
 126:../../libDaisy//src/daisy_seed.h ****     {
 419              		.loc 1 126 17 is_stmt 1 discriminator 2 view .LVU126
 420              	.LBB155:
 128:../../libDaisy//src/daisy_seed.h ****     }
 421              		.loc 1 128 23 is_stmt 0 discriminator 2 view .LVU127
 422 005c 2146     		mov	r1, r4
 423              	.LBE155:
 424              	.LBE154:
  74:uart_receive.cpp **** 			hw.PrintLine (" penta %d : %d",i, penta[i].getRaw());
 425              		.loc 6 74 3 discriminator 2 view .LVU128
 426 005e 0134     		adds	r4, r4, #1
 427              	.LVL15:
 428              	.LBB158:
 429              	.LBB156:
 128:../../libDaisy//src/daisy_seed.h ****     }
 430              		.loc 1 128 23 discriminator 2 view .LVU129
 431 0060 AA89     		ldrh	r2, [r5, #12]
 432              	.LBE156:
 433              	.LBE158:
  74:uart_receive.cpp **** 			hw.PrintLine (" penta %d : %d",i, penta[i].getRaw());
 434              		.loc 6 74 22 discriminator 2 view .LVU130
 435 0062 1035     		adds	r5, r5, #16
 436              	.LVL16:
 437              	.LBB159:
 438              	.LBB157:
 128:../../libDaisy//src/daisy_seed.h ****     }
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 25


 439              		.loc 1 128 23 discriminator 2 view .LVU131
 440 0064 1448     		ldr	r0, .L25+24
 441 0066 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 442              	.LVL17:
 128:../../libDaisy//src/daisy_seed.h ****     }
 443              		.loc 1 128 23 discriminator 2 view .LVU132
 444              	.LBE157:
 445              	.LBE159:
  74:uart_receive.cpp **** 			hw.PrintLine (" penta %d : %d",i, penta[i].getRaw());
 446              		.loc 6 74 3 is_stmt 1 discriminator 2 view .LVU133
  74:uart_receive.cpp **** 			hw.PrintLine (" penta %d : %d",i, penta[i].getRaw());
 447              		.loc 6 74 22 discriminator 2 view .LVU134
 448 006a 032C     		cmp	r4, #3
 449 006c F6D1     		bne	.L17
 450 006e 134D     		ldr	r5, .L25+28
 451              	.LBE161:
 452              	.LBB162:
  76:uart_receive.cpp **** 		}
  77:uart_receive.cpp **** 		for ( int i = 0; i < 4; i++){
 453              		.loc 6 77 13 is_stmt 0 view .LVU135
 454 0070 0024     		movs	r4, #0
 455              	.LVL18:
 456              	.L19:
  78:uart_receive.cpp **** 			hw.PrintLine ( "effect %d gate %f",i, effect[i].getGate());
 457              		.loc 6 78 4 is_stmt 1 discriminator 2 view .LVU136
 458              	.LBB163:
 459              	.LBI163:
 460              		.file 9 "Effect.h"
   1:Effect.h      **** //
   2:Effect.h      **** // Created by flipb on 06/03/2025.
   3:Effect.h      **** //
   4:Effect.h      **** 
   5:Effect.h      **** #ifndef EFFECT_H
   6:Effect.h      **** #define EFFECT_H
   7:Effect.h      **** //#include <iostream>
   8:Effect.h      **** #include <stdint.h>
   9:Effect.h      **** 
  10:Effect.h      **** 
  11:Effect.h      **** class Effect {
  12:Effect.h      **** public:
  13:Effect.h      ****     void begin(int* thresholdsI);
  14:Effect.h      ****     void setRawValue(uint16_t value) { _raw_value = value; } //set the raw value of the sensor
  15:Effect.h      ****     void setGate(bool gate) { _gate = gate; } //set the gate of the sensor
  16:Effect.h      ****     float analogCoeffFine(uint16_t value);
  17:Effect.h      ****     float analogCoeffIgnorant(uint16_t value);
  18:Effect.h      ****     float getValue() { return analogCoeffFine(_raw_value); } //get the raw value of the sensor
  19:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 461              		.loc 9 19 10 discriminator 2 view .LVU137
 462              	.LBB164:
 463              		.loc 9 19 22 discriminator 2 view .LVU138
 464              		.loc 9 19 22 is_stmt 0 discriminator 2 view .LVU139
 465              	.LBE164:
 466              	.LBE163:
 467              	.LBB165:
 468              	.LBI165:
 126:../../libDaisy//src/daisy_seed.h ****     {
 469              		.loc 1 126 17 is_stmt 1 discriminator 2 view .LVU140
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 26


 470              	.LBB166:
 128:../../libDaisy//src/daisy_seed.h ****     }
 471              		.loc 1 128 23 is_stmt 0 discriminator 2 view .LVU141
 472 0072 2A7F     		ldrb	r2, [r5, #28]	@ zero_extendqisi2
 473 0074 2146     		mov	r1, r4
 474 0076 1248     		ldr	r0, .L25+32
 475 0078 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 476              	.LVL19:
 128:../../libDaisy//src/daisy_seed.h ****     }
 477              		.loc 1 128 23 discriminator 2 view .LVU142
 478              	.LBE166:
 479              	.LBE165:
  79:uart_receive.cpp **** 			hw.PrintLine ( "effect %d value %f",i, effect[i].getValue());
 480              		.loc 6 79 4 is_stmt 1 discriminator 2 view .LVU143
 481              	.LBB167:
 482              	.LBI167:
  18:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 483              		.loc 9 18 11 discriminator 2 view .LVU144
 484              	.LBB168:
  18:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 485              		.loc 9 18 24 discriminator 2 view .LVU145
  18:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 486              		.loc 9 18 46 is_stmt 0 discriminator 2 view .LVU146
 487 007c E98B     		ldrh	r1, [r5, #30]
 488 007e 2846     		mov	r0, r5
 489              	.LBE168:
 490              	.LBE167:
  77:uart_receive.cpp **** 			hw.PrintLine ( "effect %d gate %f",i, effect[i].getGate());
 491              		.loc 6 77 22 discriminator 2 view .LVU147
 492 0080 2035     		adds	r5, r5, #32
 493              	.LVL20:
 494              	.LBB170:
 495              	.LBB169:
  18:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 496              		.loc 9 18 46 discriminator 2 view .LVU148
 497 0082 FFF7FEFF 		bl	_ZN6Effect15analogCoeffFineEt
 498              	.LVL21:
  18:Effect.h      ****     bool getGate() { return _gate; } //get the gate of the sensor
 499              		.loc 9 18 46 discriminator 2 view .LVU149
 500              	.LBE169:
 501              	.LBE170:
 502              	.LBB171:
 503              	.LBI171:
 126:../../libDaisy//src/daisy_seed.h ****     {
 504              		.loc 1 126 17 is_stmt 1 discriminator 2 view .LVU150
 505              	.LBB172:
 128:../../libDaisy//src/daisy_seed.h ****     }
 506              		.loc 1 128 23 is_stmt 0 discriminator 2 view .LVU151
 507 0086 B7EEC07A 		vcvt.f64.f32	d7, s0
 508 008a 2146     		mov	r1, r4
 509              	.LBE172:
 510              	.LBE171:
  77:uart_receive.cpp **** 			hw.PrintLine ( "effect %d gate %f",i, effect[i].getGate());
 511              		.loc 6 77 3 discriminator 2 view .LVU152
 512 008c 0134     		adds	r4, r4, #1
 513              	.LVL22:
 514              	.LBB174:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 27


 515              	.LBB173:
 128:../../libDaisy//src/daisy_seed.h ****     }
 516              		.loc 1 128 23 discriminator 2 view .LVU153
 517 008e 0D48     		ldr	r0, .L25+36
 518 0090 53EC172B 		vmov	r2, r3, d7
 519 0094 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 520              	.LVL23:
 128:../../libDaisy//src/daisy_seed.h ****     }
 521              		.loc 1 128 23 discriminator 2 view .LVU154
 522              	.LBE173:
 523              	.LBE174:
  77:uart_receive.cpp **** 			hw.PrintLine ( "effect %d gate %f",i, effect[i].getGate());
 524              		.loc 6 77 3 is_stmt 1 discriminator 2 view .LVU155
  77:uart_receive.cpp **** 			hw.PrintLine ( "effect %d gate %f",i, effect[i].getGate());
 525              		.loc 6 77 22 discriminator 2 view .LVU156
 526 0098 042C     		cmp	r4, #4
 527 009a EAD1     		bne	.L19
 528 009c D7E7     		b	.L18
 529              	.L26:
 530 009e 00BF     		.align	2
 531              	.L25:
 532 00a0 00000000 		.word	.LANCHOR3
 533 00a4 00000000 		.word	.LANCHOR4
 534 00a8 01060107 		.word	117507585
 535 00ac 00000000 		.word	.LANCHOR0
 536 00b0 00000000 		.word	.LC3
 537 00b4 00000000 		.word	.LANCHOR1
 538 00b8 0C000000 		.word	.LC4
 539 00bc 00000000 		.word	.LANCHOR2
 540 00c0 1C000000 		.word	.LC5
 541 00c4 30000000 		.word	.LC6
 542              	.LBE162:
 543              	.LBE147:
 544              		.cfi_endproc
 545              	.LFE4694:
 547              		.section	.text.startup._GLOBAL__sub_I_uart,"ax",%progbits
 548              		.align	1
 549              		.p2align 2,,3
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv5-d16
 555              	_GLOBAL__sub_I_uart:
 556              	.LFB5261:
  80:uart_receive.cpp **** 		}
  81:uart_receive.cpp **** 	}
  82:uart_receive.cpp **** }
 557              		.loc 6 82 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              	.LBB204:
 562              	.LBI204:
 563              		.loc 6 82 1 view .LVU158
 564              	.LVL24:
 565              	.LBB205:
 566              	.LBB206:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 28


 567              	.LBI206:
 568              		.file 10 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../../libDaisy//src/per/uart.h **** */
   5:../../libDaisy//src/per/uart.h **** 
   6:../../libDaisy//src/per/uart.h **** #pragma once
   7:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
   8:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  10:../../libDaisy//src/per/uart.h **** 
  11:../../libDaisy//src/per/uart.h **** 
  12:../../libDaisy//src/per/uart.h **** namespace daisy
  13:../../libDaisy//src/per/uart.h **** {
  14:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  15:../../libDaisy//src/per/uart.h ****     @{
  16:../../libDaisy//src/per/uart.h ****     */
  17:../../libDaisy//src/per/uart.h **** 
  18:../../libDaisy//src/per/uart.h **** /** 
  19:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  20:../../libDaisy//src/per/uart.h ****     @author shensley
  21:../../libDaisy//src/per/uart.h ****     @date March 2020
  22:../../libDaisy//src/per/uart.h ****     */
  23:../../libDaisy//src/per/uart.h **** class UartHandler
  24:../../libDaisy//src/per/uart.h **** {
  25:../../libDaisy//src/per/uart.h ****   public:
  26:../../libDaisy//src/per/uart.h ****     struct Config
  27:../../libDaisy//src/per/uart.h ****     {
  28:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  29:../../libDaisy//src/per/uart.h ****         {
  30:../../libDaisy//src/per/uart.h ****             USART_1,
  31:../../libDaisy//src/per/uart.h ****             USART_2,
  32:../../libDaisy//src/per/uart.h ****             USART_3,
  33:../../libDaisy//src/per/uart.h ****             UART_4,
  34:../../libDaisy//src/per/uart.h ****             UART_5,
  35:../../libDaisy//src/per/uart.h ****             USART_6,
  36:../../libDaisy//src/per/uart.h ****             UART_7,
  37:../../libDaisy//src/per/uart.h ****             UART_8,
  38:../../libDaisy//src/per/uart.h ****             LPUART_1,
  39:../../libDaisy//src/per/uart.h ****         };
  40:../../libDaisy//src/per/uart.h **** 
  41:../../libDaisy//src/per/uart.h ****         enum class StopBits
  42:../../libDaisy//src/per/uart.h ****         {
  43:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  44:../../libDaisy//src/per/uart.h ****             BITS_1,
  45:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_2,
  47:../../libDaisy//src/per/uart.h ****         };
  48:../../libDaisy//src/per/uart.h **** 
  49:../../libDaisy//src/per/uart.h ****         enum class Parity
  50:../../libDaisy//src/per/uart.h ****         {
  51:../../libDaisy//src/per/uart.h ****             NONE,
  52:../../libDaisy//src/per/uart.h ****             EVEN,
  53:../../libDaisy//src/per/uart.h ****             ODD,
  54:../../libDaisy//src/per/uart.h ****         };
  55:../../libDaisy//src/per/uart.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 29


  56:../../libDaisy//src/per/uart.h ****         enum class Mode
  57:../../libDaisy//src/per/uart.h ****         {
  58:../../libDaisy//src/per/uart.h ****             RX,
  59:../../libDaisy//src/per/uart.h ****             TX,
  60:../../libDaisy//src/per/uart.h ****             TX_RX,
  61:../../libDaisy//src/per/uart.h ****         };
  62:../../libDaisy//src/per/uart.h **** 
  63:../../libDaisy//src/per/uart.h ****         enum class WordLength
  64:../../libDaisy//src/per/uart.h ****         {
  65:../../libDaisy//src/per/uart.h ****             BITS_7,
  66:../../libDaisy//src/per/uart.h ****             BITS_8,
  67:../../libDaisy//src/per/uart.h ****             BITS_9,
  68:../../libDaisy//src/per/uart.h ****         };
  69:../../libDaisy//src/per/uart.h **** 
  70:../../libDaisy//src/per/uart.h ****         struct
  71:../../libDaisy//src/per/uart.h ****         {
  72:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  75:../../libDaisy//src/per/uart.h **** 
  76:../../libDaisy//src/per/uart.h ****         Config()
  77:../../libDaisy//src/per/uart.h ****         {
  78:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  80:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  81:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  82:../../libDaisy//src/per/uart.h ****             baudrate   = 31250;
  83:../../libDaisy//src/per/uart.h ****         }
  84:../../libDaisy//src/per/uart.h **** 
  85:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  86:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  87:../../libDaisy//src/per/uart.h ****         Parity     parity;
  88:../../libDaisy//src/per/uart.h ****         Mode       mode;
  89:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  90:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  91:../../libDaisy//src/per/uart.h ****     };
  92:../../libDaisy//src/per/uart.h **** 
  93:../../libDaisy//src/per/uart.h **** 
  94:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 569              		.loc 10 94 5 view .LVU159
 570              	.LBE206:
 571              	.LBE205:
 572              	.LBE204:
 573              		.loc 6 82 1 is_stmt 0 view .LVU160
 574 0000 38B5     		push	{r3, r4, r5, lr}
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 3, -16
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 5, -8
 579              		.cfi_offset 14, -4
 580              	.LBB260:
 581              	.LBB259:
 582              	.LBB211:
 583              	.LBB207:
 584              	.LBB208:
 585              		.loc 10 94 35 view .LVU161
 586 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 30


 587 0004 164C     		ldr	r4, .L31
 588              	.LBE208:
 589              	.LBE207:
 590              	.LBE211:
 591              	.LBB212:
 592              	.LBB213:
 593              	.LBB214:
 594              	.LBB215:
 595              	.LBB216:
 596              		.file 11 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 31


  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 32


 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 33


 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 597              		.loc 11 166 34 view .LVU162
 598 0006 1748     		ldr	r0, .L31+4
 599              	.LBE216:
 600              	.LBE215:
 601              	.LBE214:
 602              	.LBE213:
 603              	.LBE212:
 604              	.LBB238:
 605              	.LBB239:
 606              	.LBB240:
  79:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
 607              		.loc 10 79 24 view .LVU163
 608 0008 0121     		movs	r1, #1
 609              	.LBE240:
 610              	.LBE239:
 611              	.LBE238:
 612              	.LBB247:
 613              	.LBB210:
 614              	.LBB209:
 615              		.loc 10 94 35 view .LVU164
 616 000a 2360     		str	r3, [r4]
 617              	.LVL25:
 618              		.loc 10 94 35 view .LVU165
 619              	.LBE209:
 620              	.LBE210:
 621              	.LBE247:
 622              	.LBB248:
 623              	.LBI238:
  76:../../libDaisy//src/per/uart.h ****         {
 624              		.loc 10 76 9 is_stmt 1 view .LVU166
 625              	.LBB244:
 626              	.LBB241:
  79:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
 627              		.loc 10 79 13 view .LVU167
  80:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 628              		.loc 10 80 13 view .LVU168
  81:../../libDaisy//src/per/uart.h ****             baudrate   = 31250;
 629              		.loc 10 81 13 view .LVU169
  82:../../libDaisy//src/per/uart.h ****         }
 630              		.loc 10 82 24 is_stmt 0 view .LVU170
 631 000c 47F61224 		movw	r4, #31250
  79:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
 632              		.loc 10 79 24 view .LVU171
 633 0010 154A     		ldr	r2, .L31+8
 634              	.LBE241:
 635              	.LBE244:
 636              	.LBE248:
 637              	.LBB249:
 638              	.LBB236:
 639              	.LBB219:
 640              	.LBB218:
 641              	.LBB217:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 34


 642              		.loc 11 166 34 view .LVU172
 643 0012 0360     		str	r3, [r0]
 644              	.LBE217:
 645              	.LBE218:
 646              	.LBE219:
 647              	.LBB220:
 648              	.LBB221:
 649              	.LBB222:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 650              		.loc 5 95 35 view .LVU173
 651 0014 4361     		str	r3, [r0, #20]
 652              	.LBE222:
 653              	.LBE221:
 654              	.LBE220:
 655              	.LBB223:
 656              	.LBB224:
 657              	.LBB225:
 658              		.file 12 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 35


  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 659              		.loc 12 84 33 view .LVU174
 660 0016 0362     		str	r3, [r0, #32]
 661              	.LBE225:
 662              	.LBE224:
 663              	.LBE223:
 664              	.LBB226:
 665              	.LBB227:
 666              	.LBB228:
 667              		.file 13 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 36


   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 37


  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 668              		.loc 13 108 33 view .LVU175
 669 0018 C363     		str	r3, [r0, #60]
 670              	.LBE228:
 671              	.LBE227:
 672              	.LBE226:
 673              	.LBE236:
 674              	.LBE249:
 675              	.LBB250:
 676              	.LBB245:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 38


 677              	.LBB242:
  81:../../libDaisy//src/per/uart.h ****             baudrate   = 31250;
 678              		.loc 10 81 24 view .LVU176
 679 001a 5161     		str	r1, [r2, #20]
  82:../../libDaisy//src/per/uart.h ****         }
 680              		.loc 10 82 13 is_stmt 1 view .LVU177
  82:../../libDaisy//src/per/uart.h ****         }
 681              		.loc 10 82 24 is_stmt 0 view .LVU178
 682 001c 9461     		str	r4, [r2, #24]
 683              	.LVL26:
  82:../../libDaisy//src/per/uart.h ****         }
 684              		.loc 10 82 24 view .LVU179
 685              	.LBE242:
 686              	.LBE245:
 687              	.LBE250:
 688              	.LBB251:
 689              	.LBI212:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 690              		.loc 1 21 5 is_stmt 1 view .LVU180
 691              	.LBB237:
 692              	.LBB229:
 693              	.LBI214:
 694              		.loc 11 166 5 view .LVU181
 695              		.loc 11 166 5 is_stmt 0 view .LVU182
 696              	.LBE229:
 697              	.LBB230:
 698              	.LBI220:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 699              		.loc 5 95 5 is_stmt 1 view .LVU183
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 700              		.loc 5 95 5 is_stmt 0 view .LVU184
 701              	.LBE230:
 702              	.LBB231:
 703              	.LBI231:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 704              		.loc 4 109 5 is_stmt 1 view .LVU185
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 705              		.loc 4 109 5 is_stmt 0 view .LVU186
 706              	.LBE231:
 707              	.LBB232:
 708              	.LBI223:
 709              		.loc 12 84 5 is_stmt 1 view .LVU187
 710              		.loc 12 84 5 is_stmt 0 view .LVU188
 711              	.LBE232:
 712              	.LBB233:
 713              	.LBI233:
  40:../../libDaisy//src/hid/usb.h **** 
 714              		.loc 3 40 5 is_stmt 1 view .LVU189
  40:../../libDaisy//src/hid/usb.h **** 
 715              		.loc 3 40 5 is_stmt 0 view .LVU190
 716              	.LBE233:
 717              	.LBB234:
 718              	.LBI234:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 719              		.loc 2 96 5 is_stmt 1 view .LVU191
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 720              		.loc 2 96 5 is_stmt 0 view .LVU192
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 39


 721              	.LBE234:
 722              	.LBB235:
 723              	.LBI226:
 724              		.loc 13 108 5 is_stmt 1 view .LVU193
 725              		.loc 13 108 5 is_stmt 0 view .LVU194
 726 001e 134D     		ldr	r5, .L31+12
 727              	.LBE235:
 728              	.LBE237:
 729              	.LBE251:
 730              	.LBB252:
 731              	.LBB246:
 732              	.LBB243:
  80:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 733              		.loc 10 80 24 view .LVU195
 734 0020 C2E90213 		strd	r1, r3, [r2, #8]
 735              	.LBE243:
 736              	.LBE246:
 737              	.LBE252:
  10:uart_receive.cpp **** pentaPianta penta[3]; // Array of pentaPianta objects
 738              		.loc 6 10 11 view .LVU196
 739 0024 124A     		ldr	r2, .L31+16
 740 0026 1349     		ldr	r1, .L31+20
 741 0028 FFF7FEFF 		bl	__aeabi_atexit
 742              	.LVL27:
  11:uart_receive.cpp **** 
 743              		.loc 6 11 20 is_stmt 1 view .LVU197
 744 002c 1248     		ldr	r0, .L31+24
 745 002e FFF7FEFF 		bl	_ZN11pentaPiantaC1Ev
 746              	.LVL28:
  11:uart_receive.cpp **** 
 747              		.loc 6 11 20 view .LVU198
  11:uart_receive.cpp **** 
 748              		.loc 6 11 20 view .LVU199
 749 0032 1248     		ldr	r0, .L31+28
 750 0034 FFF7FEFF 		bl	_ZN11pentaPiantaC1Ev
 751              	.LVL29:
  11:uart_receive.cpp **** 
 752              		.loc 6 11 20 view .LVU200
  11:uart_receive.cpp **** 
 753              		.loc 6 11 20 view .LVU201
 754 0038 1148     		ldr	r0, .L31+32
 755 003a FFF7FEFF 		bl	_ZN11pentaPiantaC1Ev
 756              	.LVL30:
  11:uart_receive.cpp **** 
 757              		.loc 6 11 20 view .LVU202
  11:uart_receive.cpp **** 
 758              		.loc 6 11 20 view .LVU203
  13:uart_receive.cpp **** void getData()
 759              		.loc 6 13 16 view .LVU204
 760 003e 05F1800E 		add	lr, r5, #128
 761              	.L28:
 762              	.LVL31:
 763              	.LBB253:
 764              	.LBI253:
  11:Effect.h      **** public:
 765              		.loc 9 11 7 view .LVU205
 766              	.LBB254:
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 40


 767 0042 104C     		ldr	r4, .L31+36
 768 0044 05F1040C 		add	ip, r5, #4
 769              	.LBE254:
 770              	.LBE253:
  13:uart_receive.cpp **** void getData()
 771              		.loc 6 13 16 is_stmt 0 view .LVU206
 772 0048 2035     		adds	r5, r5, #32
 773              	.LVL32:
 774              	.LBB257:
 775              	.LBB255:
  11:Effect.h      **** public:
 776              		.loc 9 11 7 view .LVU207
 777 004a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 778              	.LBE255:
 779              	.LBE257:
  13:uart_receive.cpp **** void getData()
 780              		.loc 6 13 16 view .LVU208
 781 004c AE45     		cmp	lr, r5
 782              	.LBB258:
 783              	.LBB256:
  11:Effect.h      **** public:
 784              		.loc 9 11 7 view .LVU209
 785 004e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 786 0052 94E80300 		ldm	r4, {r0, r1}
 787 0056 8CE80300 		stm	ip, {r0, r1}
 788              	.LVL33:
  11:Effect.h      **** public:
 789              		.loc 9 11 7 view .LVU210
 790              	.LBE256:
 791              	.LBE258:
  13:uart_receive.cpp **** void getData()
 792              		.loc 6 13 16 is_stmt 1 view .LVU211
  13:uart_receive.cpp **** void getData()
 793              		.loc 6 13 16 view .LVU212
 794 005a F2D1     		bne	.L28
 795              	.LBE259:
 796              	.LBE260:
 797              		.loc 6 82 1 is_stmt 0 view .LVU213
 798 005c 38BD     		pop	{r3, r4, r5, pc}
 799              	.L32:
 800 005e 00BF     		.align	2
 801              	.L31:
 802 0060 00000000 		.word	.LANCHOR0
 803 0064 00000000 		.word	.LANCHOR3
 804 0068 00000000 		.word	.LANCHOR4
 805 006c 00000000 		.word	.LANCHOR2
 806 0070 00000000 		.word	__dso_handle
 807 0074 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 808 0078 00000000 		.word	.LANCHOR1
 809 007c 10000000 		.word	.LANCHOR1+16
 810 0080 20000000 		.word	.LANCHOR1+32
 811 0084 00000000 		.word	.LANCHOR5
 812              		.cfi_endproc
 813              	.LFE5261:
 815              		.section	.init_array,"aw",%init_array
 816              		.align	2
 817 0000 00000000 		.word	_GLOBAL__sub_I_uart(target1)
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 41


 818              		.global	effect
 819              		.global	penta
 820              		.global	hw
 821              		.global	config
 822              		.global	uart
 823              		.section	.rodata
 824              		.align	2
 825              		.set	.LANCHOR5,. + 0
 826              	.LC2:
 827 0000 00000000 		.word	0
 828 0004 CDCC4C3E 		.word	1045220557
 829 0008 CDCCCC3E 		.word	1053609165
 830 000c 9A99193F 		.word	1058642330
 831 0010 CDCC4C3F 		.word	1061997773
 832 0014 0000803F 		.word	1065353216
 833              		.section	.bss.config,"aw",%nobits
 834              		.align	2
 835              		.set	.LANCHOR4,. + 0
 838              	config:
 839 0000 00000000 		.space	28
 839      00000000 
 839      00000000 
 839      00000000 
 839      00000000 
 840              		.section	.bss.effect,"aw",%nobits
 841              		.align	2
 842              		.set	.LANCHOR2,. + 0
 845              	effect:
 846 0000 00000000 		.space	128
 846      00000000 
 846      00000000 
 846      00000000 
 846      00000000 
 847              		.section	.bss.hw,"aw",%nobits
 848              		.align	2
 849              		.set	.LANCHOR3,. + 0
 852              	hw:
 853 0000 00000000 		.space	64
 853      00000000 
 853      00000000 
 853      00000000 
 853      00000000 
 854              		.section	.bss.penta,"aw",%nobits
 855              		.align	2
 856              		.set	.LANCHOR1,. + 0
 859              	penta:
 860 0000 00000000 		.space	48
 860      00000000 
 860      00000000 
 860      00000000 
 860      00000000 
 861              		.section	.bss.uart,"aw",%nobits
 862              		.align	2
 863              		.set	.LANCHOR0,. + 0
 866              	uart:
 867 0000 00000000 		.space	4
 868              		.text
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 42


 869              	.Letext0:
 870              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 871              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 872              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 873              		.file 17 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 874              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 875              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 876              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 877              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 878              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 879              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 880              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 881              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 882              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 883              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 884              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 885              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 886              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 887              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 888              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 889              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 890              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 891              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 892              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 893              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 894              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 895              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 896              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 897              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 898              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 899              		.file 43 "../../libDaisy//src/per/tim.h"
 900              		.file 44 "../../libDaisy//src/hid/logger_impl.h"
 901              		.file 45 "../../libDaisy//src/util/wav_format.h"
 902              		.file 46 "../../libDaisy//src/dev/max11300.h"
 903              		.file 47 "../../libDaisy//src/hid/logger.h"
 904              		.file 48 "../../libDaisy//src/per/gpio.h"
 905              		.file 49 "../../libDaisy//src/dev/sdram.h"
 906              		.file 50 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 907              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 908              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 909              		.file 53 "../../DaisySP//Source/Control/adenv.h"
 910              		.file 54 "../../DaisySP//Source/Utility/dsp.h"
 911              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 912              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 913              		.file 57 "../../libDaisy//src/dev/sr_595.h"
 914              		.file 58 "<built-in>"
ARM GAS  C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 uart_receive.cpp
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:67     .text._Z7getDatav:00000000 $t
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:75     .text._Z7getDatav:00000000 _Z7getDatav
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:252    .text._Z7getDatav:00000098 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:259    .rodata.main.str1.4:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:272    .text.startup.main:00000000 $t
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:280    .text.startup.main:00000000 main
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:532    .text.startup.main:000000a0 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:548    .text.startup._GLOBAL__sub_I_uart:00000000 $t
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:555    .text.startup._GLOBAL__sub_I_uart:00000000 _GLOBAL__sub_I_uart
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:802    .text.startup._GLOBAL__sub_I_uart:00000060 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:816    .init_array:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:845    .bss.effect:00000000 effect
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:859    .bss.penta:00000000 penta
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:852    .bss.hw:00000000 hw
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:838    .bss.config:00000000 config
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:866    .bss.uart:00000000 uart
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:824    .rodata:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:834    .bss.config:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:841    .bss.effect:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:848    .bss.hw:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:855    .bss.penta:00000000 $d
C:\Users\matte\AppData\Local\Temp\ccmSb0hc.s:862    .bss.uart:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy11UartHandler15BlockingReceiveEPhtm
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN6Effect15analogCoeffFineEt
__aeabi_atexit
_ZN11pentaPiantaC1Ev
__dso_handle
