ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MotoreAudio.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB112:
  36              	.LBI112:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE112:
  41              	.LBB113:
  42              	.LBI113:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 4


  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE113:
  47              	.LBB114:
  48              	.LBI114:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 5


  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 6


  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE114:
  53              	.LBB115:
  54              	.LBI115:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 7


  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 8


  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE115:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	__tcf_0:
  75              	.LFB5246:
  76              		.file 6 "MotoreAudio.cpp"
   1:MotoreAudio.cpp **** #include "daisy_seed.h"
   2:MotoreAudio.cpp **** #include "daisysp.h"
   3:MotoreAudio.cpp **** 
   4:MotoreAudio.cpp **** using namespace daisy;
   5:MotoreAudio.cpp **** using namespace daisysp;
   6:MotoreAudio.cpp **** #define n 3 //numero di suoni del motore audio
   7:MotoreAudio.cpp **** #define m 2 // numero di voci per ogni suono
   8:MotoreAudio.cpp **** #define detune 1.001  // coefficiente di detuning (considera che sqrt_12(2) = 1.06 è 1 semitono)
   9:MotoreAudio.cpp **** #define startingFreq 150
  10:MotoreAudio.cpp **** 
  11:MotoreAudio.cpp **** 
  12:MotoreAudio.cpp **** DaisySeed         hw;
  13:MotoreAudio.cpp **** AdcChannelConfig adcConfig[4]; // 3 canali ADC, Diventerà la lettura capacitiva
  14:MotoreAudio.cpp **** float knob[3]; // 3 potenziometri--> Diventeranno Piante
  15:MotoreAudio.cpp **** 
  16:MotoreAudio.cpp **** 
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 9


  17:MotoreAudio.cpp **** Adsr        Amp_env[n];  // inviluppi all'ampiezza
  77              		.loc 6 17 13 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              		.loc 6 17 13 is_stmt 0 view .LVU11
  83 0000 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE5246:
  87 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.global	_Z13AudioCallbackPKPKfPPfj
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv5-d16
  96              	_Z13AudioCallbackPKPKfPPfj:
  97              	.LVL1:
  98              	.LFB4682:
  18:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
  19:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
  20:MotoreAudio.cpp **** 
  21:MotoreAudio.cpp **** float Suono[n]; // n Suoni somma di m voci
  22:MotoreAudio.cpp **** float f[n]; // n frequenze da settare
  23:MotoreAudio.cpp **** 
  24:MotoreAudio.cpp **** 
  25:MotoreAudio.cpp **** 
  26:MotoreAudio.cpp **** 
  27:MotoreAudio.cpp **** 
  28:MotoreAudio.cpp **** 
  29:MotoreAudio.cpp **** 
  30:MotoreAudio.cpp **** void InstrumentInit(Oscillator Voices[n][m], /*Adsr Aeg[n], Adsr Feg*/ float sr)
  31:MotoreAudio.cpp **** {
  32:MotoreAudio.cpp **** 	//inizializza suoni
  33:MotoreAudio.cpp **** 	for (int i = 0 ; i<n ; i++){
  34:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
  35:MotoreAudio.cpp **** 
  36:MotoreAudio.cpp **** 			uint8_t k = j + i + 5; // 5=tri 6=saw 7=square se vai a vedere nel Cpp degli Oscillatori
  37:MotoreAudio.cpp **** 			if (i == 2 && j ==1) k = 5; //forza la forma d'onda a triangolare quando  i +j +5 vuole andare a
  38:MotoreAudio.cpp **** 
  39:MotoreAudio.cpp **** 			//Voci 
  40:MotoreAudio.cpp **** 			Voices[i][j].Init(sr);
  41:MotoreAudio.cpp **** 			Voices[i][j].SetWaveform(k);
  42:MotoreAudio.cpp ****     		Voices[i][j].SetFreq(150);
  43:MotoreAudio.cpp ****     		Voices[i][j].SetAmp(0.5);
  44:MotoreAudio.cpp **** 
  45:MotoreAudio.cpp **** 		
  46:MotoreAudio.cpp **** 		}
  47:MotoreAudio.cpp **** 	//Aeg[i].Init(sr);
  48:MotoreAudio.cpp **** 	//Feg[i].Init(sr);
  49:MotoreAudio.cpp **** 	}
  50:MotoreAudio.cpp **** 	
  51:MotoreAudio.cpp **** 	/* INVILUPPI
  52:MotoreAudio.cpp **** 	// Amp ADSR suono 1
  53:MotoreAudio.cpp **** 	Aeg[1].SetTime(ADSR_SEG_ATTACK, .5);
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 10


  54:MotoreAudio.cpp ****     Aeg[1].SetTime(ADSR_SEG_DECAY, .5);
  55:MotoreAudio.cpp ****     Aeg[1].SetTime(ADSR_SEG_RELEASE, .6);
  56:MotoreAudio.cpp **** 	Aeg[1].SetSustainLevel(.5);
  57:MotoreAudio.cpp **** 
  58:MotoreAudio.cpp **** 	// Amp ADSR suono 2
  59:MotoreAudio.cpp **** 	Aeg[2].SetTime(ADSR_SEG_ATTACK, .05);
  60:MotoreAudio.cpp ****     Aeg[2].SetTime(ADSR_SEG_DECAY, .4);
  61:MotoreAudio.cpp ****     Aeg[2].SetTime(ADSR_SEG_RELEASE, 0);
  62:MotoreAudio.cpp **** 	Aeg[2].SetSustainLevel(0);
  63:MotoreAudio.cpp **** 
  64:MotoreAudio.cpp **** 	// Amp ADSR suono 3
  65:MotoreAudio.cpp **** 	Aeg[3].SetTime(ADSR_SEG_ATTACK, .1);
  66:MotoreAudio.cpp ****     Aeg[3].SetTime(ADSR_SEG_DECAY, .1);
  67:MotoreAudio.cpp ****     Aeg[3].SetTime(ADSR_SEG_RELEASE, .1);
  68:MotoreAudio.cpp **** 	Aeg[3].SetSustainLevel(.4);
  69:MotoreAudio.cpp **** 
  70:MotoreAudio.cpp **** 	// LPF ADSR suono 1
  71:MotoreAudio.cpp **** 	Aeg[1].SetTime(ADSR_SEG_ATTACK, .5);
  72:MotoreAudio.cpp ****     Aeg[1].SetTime(ADSR_SEG_DECAY, .5);
  73:MotoreAudio.cpp ****     Aeg[1].SetTime(ADSR_SEG_RELEASE, .6);
  74:MotoreAudio.cpp **** 	Aeg[1].SetSustainLevel(.5);
  75:MotoreAudio.cpp **** 
  76:MotoreAudio.cpp **** 	// LPF ADSR suono 2
  77:MotoreAudio.cpp **** 	Aeg[2].SetTime(ADSR_SEG_ATTACK, .05);
  78:MotoreAudio.cpp ****     Aeg[2].SetTime(ADSR_SEG_DECAY, .4);
  79:MotoreAudio.cpp ****     Aeg[2].SetTime(ADSR_SEG_RELEASE, 0);
  80:MotoreAudio.cpp **** 	Aeg[2].SetSustainLevel(0);
  81:MotoreAudio.cpp **** 
  82:MotoreAudio.cpp **** 	// LPF ADSR suono 3
  83:MotoreAudio.cpp **** 	Aeg[3].SetTime(ADSR_SEG_ATTACK, .1);
  84:MotoreAudio.cpp ****     Aeg[3].SetTime(ADSR_SEG_DECAY, .1);
  85:MotoreAudio.cpp ****     Aeg[3].SetTime(ADSR_SEG_RELEASE, .1);
  86:MotoreAudio.cpp **** 	Aeg[3].SetSustainLevel(.4);
  87:MotoreAudio.cpp **** 	
  88:MotoreAudio.cpp **** 	*/
  89:MotoreAudio.cpp **** 
  90:MotoreAudio.cpp **** }
  91:MotoreAudio.cpp **** 
  92:MotoreAudio.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  93:MotoreAudio.cpp **** {
  99              		.loc 6 93 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
  94:MotoreAudio.cpp **** 	for (int i = 0 ; i < n; i++)
 103              		.loc 6 94 2 view .LVU13
 104              	.LBB117:
 105              		.loc 6 94 21 view .LVU14
 106              	.LBE117:
  93:MotoreAudio.cpp **** 	for (int i = 0 ; i < n; i++)
 107              		.loc 6 93 1 is_stmt 0 view .LVU15
 108 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 109              		.cfi_def_cfa_offset 40
 110              		.cfi_offset 3, -40
 111              		.cfi_offset 4, -36
 112              		.cfi_offset 5, -32
 113              		.cfi_offset 6, -28
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 11


 114              		.cfi_offset 7, -24
 115              		.cfi_offset 8, -20
 116              		.cfi_offset 9, -16
 117              		.cfi_offset 10, -12
 118              		.cfi_offset 11, -8
 119              		.cfi_offset 14, -4
 120 0004 324D     		ldr	r5, .L13+8
 121 0006 8846     		mov	r8, r1
 122 0008 DFF8CCA0 		ldr	r10, .L13+16
 123 000c 9146     		mov	r9, r2
 124 000e 05F10C06 		add	r6, r5, #12
 125 0012 5446     		mov	r4, r10
 126 0014 2DED028B 		vpush.64	{d8}
 127              		.cfi_def_cfa_offset 48
 128              		.cfi_offset 80, -48
 129              		.cfi_offset 81, -44
 130              	.LVL2:
 131              	.L5:
 132              	.LBB128:
  95:MotoreAudio.cpp **** 	{
  96:MotoreAudio.cpp **** 		osc[i][0].SetFreq(f[i]);
 133              		.loc 6 96 3 is_stmt 1 discriminator 2 view .LVU16
 134              		.loc 6 96 20 is_stmt 0 discriminator 2 view .LVU17
 135 0018 95ED000A 		vldr.32	s0, [r5]
 136              	.LVL3:
 137              	.LBB118:
 138              	.LBI118:
 139              		.file 7 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 12


  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
 140              		.loc 7 67 17 is_stmt 1 discriminator 2 view .LVU18
 141              	.LBB119:
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 142              		.loc 7 69 9 discriminator 2 view .LVU19
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 143              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU20
 144 001c 2046     		mov	r0, r4
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 145              		.loc 7 69 20 discriminator 2 view .LVU21
 146 001e 84ED020A 		vstr.32	s0, [r4, #8]
 147              		.loc 7 70 9 is_stmt 1 discriminator 2 view .LVU22
 148              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU23
 149 0022 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 150              	.LVL4:
 151              		.loc 7 70 34 discriminator 2 view .LVU24
 152              	.LBE119:
 153              	.LBE118:
  97:MotoreAudio.cpp **** 		osc[i][1].SetFreq(f[i]*detune); // detuna la seconda voce di ogni suono
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 13


 154              		.loc 6 97 24 discriminator 2 view .LVU25
 155 0026 F5EC017A 		vldmia.32	r5!, {s15}
 156              	.LBB121:
 157              	.LBB120:
 158              		.loc 7 70 20 discriminator 2 view .LVU26
 159 002a 84ED070A 		vstr.32	s0, [r4, #28]
 160              	.LVL5:
 161              		.loc 7 70 20 discriminator 2 view .LVU27
 162              	.LBE120:
 163              	.LBE121:
 164              		.loc 6 97 3 is_stmt 1 discriminator 2 view .LVU28
 165              	.LBB122:
 166              	.LBB123:
 167              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU29
 168 002e 04F12C00 		add	r0, r4, #44
 169              	.LBE123:
 170              	.LBE122:
 171              		.loc 6 97 24 discriminator 2 view .LVU30
 172 0032 B7EEE70A 		vcvt.f64.f32	d0, s15
  94:MotoreAudio.cpp **** 	{
 173              		.loc 6 94 21 discriminator 2 view .LVU31
 174 0036 5834     		adds	r4, r4, #88
 175              		.loc 6 97 25 discriminator 2 view .LVU32
 176 0038 9FED236B 		vldr.64	d6, .L13
 177 003c 20EE060B 		vmul.f64	d0, d0, d6
 178              		.loc 6 97 20 discriminator 2 view .LVU33
 179 0040 B7EEC00B 		vcvt.f32.f64	s0, d0
 180              	.LVL6:
 181              	.LBB126:
 182              	.LBI122:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 183              		.loc 7 67 17 is_stmt 1 discriminator 2 view .LVU34
 184              	.LBB124:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 185              		.loc 7 69 9 discriminator 2 view .LVU35
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 186              		.loc 7 69 20 is_stmt 0 discriminator 2 view .LVU36
 187 0044 04ED090A 		vstr.32	s0, [r4, #-36]
 188              		.loc 7 70 9 is_stmt 1 discriminator 2 view .LVU37
 189              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU38
 190 0048 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 191              	.LVL7:
 192              		.loc 7 70 34 discriminator 2 view .LVU39
 193              	.LBE124:
 194              	.LBE126:
  94:MotoreAudio.cpp **** 	{
 195              		.loc 6 94 21 discriminator 2 view .LVU40
 196 004c B542     		cmp	r5, r6
 197              	.LBB127:
 198              	.LBB125:
 199              		.loc 7 70 20 discriminator 2 view .LVU41
 200 004e 04ED040A 		vstr.32	s0, [r4, #-16]
 201              		.loc 7 70 20 discriminator 2 view .LVU42
 202              	.LBE125:
 203              	.LBE127:
  94:MotoreAudio.cpp **** 	{
 204              		.loc 6 94 2 is_stmt 1 discriminator 2 view .LVU43
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 14


  94:MotoreAudio.cpp **** 	{
 205              		.loc 6 94 21 discriminator 2 view .LVU44
 206 0052 E1D1     		bne	.L5
 207              	.LVL8:
  94:MotoreAudio.cpp **** 	{
 208              		.loc 6 94 21 is_stmt 0 discriminator 2 view .LVU45
 209              	.LBE128:
 210              	.LBB129:
  98:MotoreAudio.cpp **** 	}
  99:MotoreAudio.cpp **** 
 100:MotoreAudio.cpp **** 	for (size_t i = 0; i < size; i++)
 211              		.loc 6 100 23 is_stmt 1 view .LVU46
 212 0054 B9F1000F 		cmp	r9, #0
 213 0058 31D0     		beq	.L4
 214              		.loc 6 100 14 is_stmt 0 view .LVU47
 215 005a 0026     		movs	r6, #0
 216 005c DFF874B0 		ldr	fp, .L13+12
 217 0060 0AF58477 		add	r7, r10, #264
 218              	.LVL9:
 219              	.L6:
 220              		.loc 6 100 14 view .LVU48
 221 0064 1B4D     		ldr	r5, .L13+12
 222 0066 5446     		mov	r4, r10
 223              	.L7:
 224              	.LBB130:
 225              	.LBB131:
 101:MotoreAudio.cpp **** 	{
 102:MotoreAudio.cpp **** 		for (int j = 0; j<n ; j++){
 103:MotoreAudio.cpp **** 			Suono[j] = osc[j][0].Process() + osc[j][1].Process(); // raggruppa le due voci nel suono, andrà
 226              		.loc 6 103 4 is_stmt 1 discriminator 2 view .LVU49
 227              		.loc 6 103 32 is_stmt 0 discriminator 2 view .LVU50
 228 0068 2046     		mov	r0, r4
 229 006a FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 230              	.LVL10:
 231 006e B0EE408A 		vmov.f32	s16, s0
 232              		.loc 6 103 54 discriminator 2 view .LVU51
 233 0072 04F12C00 		add	r0, r4, #44
 102:MotoreAudio.cpp **** 			Suono[j] = osc[j][0].Process() + osc[j][1].Process(); // raggruppa le due voci nel suono, andrà
 234              		.loc 6 102 20 discriminator 2 view .LVU52
 235 0076 5834     		adds	r4, r4, #88
 236              		.loc 6 103 54 discriminator 2 view .LVU53
 237 0078 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 238              	.LVL11:
 239              		.loc 6 103 35 discriminator 2 view .LVU54
 240 007c 38EE000A 		vadd.f32	s0, s16, s0
 102:MotoreAudio.cpp **** 			Suono[j] = osc[j][0].Process() + osc[j][1].Process(); // raggruppa le due voci nel suono, andrà
 241              		.loc 6 102 20 discriminator 2 view .LVU55
 242 0080 BC42     		cmp	r4, r7
 243              		.loc 6 103 13 discriminator 2 view .LVU56
 244 0082 A5EC010A 		vstmia.32	r5!, {s0}
 102:MotoreAudio.cpp **** 			Suono[j] = osc[j][0].Process() + osc[j][1].Process(); // raggruppa le due voci nel suono, andrà
 245              		.loc 6 102 3 is_stmt 1 discriminator 2 view .LVU57
 102:MotoreAudio.cpp **** 			Suono[j] = osc[j][0].Process() + osc[j][1].Process(); // raggruppa le due voci nel suono, andrà
 246              		.loc 6 102 20 discriminator 2 view .LVU58
 247 0086 EFD1     		bne	.L7
 248              	.LBE131:
 104:MotoreAudio.cpp **** 		}
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 15


 105:MotoreAudio.cpp **** 		float signal = Suono[0]                                // mix dei suoni
 249              		.loc 6 105 3 discriminator 2 view .LVU59
 250              	.LVL12:
 106:MotoreAudio.cpp **** 					    + Suono[1] 
 107:MotoreAudio.cpp **** 						+ Suono[2];
 108:MotoreAudio.cpp **** 		out[0][i] = 0.5*signal;
 251              		.loc 6 108 3 discriminator 2 view .LVU60
 106:MotoreAudio.cpp **** 					    + Suono[1] 
 252              		.loc 6 106 10 is_stmt 0 discriminator 2 view .LVU61
 253 0088 DBED007A 		vldr.32	s15, [fp]
 254              		.loc 6 108 18 discriminator 2 view .LVU62
 255 008c B6EE007A 		vmov.f32	s14, #5.0e-1
 106:MotoreAudio.cpp **** 					    + Suono[1] 
 256              		.loc 6 106 10 discriminator 2 view .LVU63
 257 0090 9BED016A 		vldr.32	s12, [fp, #4]
 105:MotoreAudio.cpp **** 					    + Suono[1] 
 258              		.loc 6 105 9 discriminator 2 view .LVU64
 259 0094 DBED026A 		vldr.32	s13, [fp, #8]
 106:MotoreAudio.cpp **** 					    + Suono[1] 
 260              		.loc 6 106 10 discriminator 2 view .LVU65
 261 0098 77EE867A 		vadd.f32	s15, s15, s12
 109:MotoreAudio.cpp **** 		out[1][i] = 0.5*signal;
 262              		.loc 6 109 13 discriminator 2 view .LVU66
 263 009c D8E90023 		ldrd	r2, r3, [r8]
 105:MotoreAudio.cpp **** 					    + Suono[1] 
 264              		.loc 6 105 9 discriminator 2 view .LVU67
 265 00a0 77EEA67A 		vadd.f32	s15, s15, s13
 266              	.LVL13:
 108:MotoreAudio.cpp **** 		out[1][i] = 0.5*signal;
 267              		.loc 6 108 13 discriminator 2 view .LVU68
 268 00a4 02EB8602 		add	r2, r2, r6, lsl #2
 269              		.loc 6 109 13 discriminator 2 view .LVU69
 270 00a8 03EB8603 		add	r3, r3, r6, lsl #2
 271              	.LBE130:
 100:MotoreAudio.cpp **** 	{
 272              		.loc 6 100 2 discriminator 2 view .LVU70
 273 00ac 0136     		adds	r6, r6, #1
 274              	.LVL14:
 275              	.LBB132:
 108:MotoreAudio.cpp **** 		out[1][i] = 0.5*signal;
 276              		.loc 6 108 18 discriminator 2 view .LVU71
 277 00ae 67EE877A 		vmul.f32	s15, s15, s14
 278              	.LVL15:
 108:MotoreAudio.cpp **** 		out[1][i] = 0.5*signal;
 279              		.loc 6 108 18 discriminator 2 view .LVU72
 280              	.LBE132:
 100:MotoreAudio.cpp **** 	{
 281              		.loc 6 100 23 discriminator 2 view .LVU73
 282 00b2 B145     		cmp	r9, r6
 283              	.LBB133:
 108:MotoreAudio.cpp **** 		out[1][i] = 0.5*signal;
 284              		.loc 6 108 13 discriminator 2 view .LVU74
 285 00b4 C2ED007A 		vstr.32	s15, [r2]
 286              	.LVL16:
 287              		.loc 6 109 3 is_stmt 1 discriminator 2 view .LVU75
 288              		.loc 6 109 13 is_stmt 0 discriminator 2 view .LVU76
 289 00b8 C3ED007A 		vstr.32	s15, [r3]
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 16


 290              	.LBE133:
 100:MotoreAudio.cpp **** 	{
 291              		.loc 6 100 2 is_stmt 1 discriminator 2 view .LVU77
 292              	.LVL17:
 100:MotoreAudio.cpp **** 	{
 293              		.loc 6 100 23 discriminator 2 view .LVU78
 294 00bc D2D1     		bne	.L6
 295              	.LVL18:
 296              	.L4:
 100:MotoreAudio.cpp **** 	{
 297              		.loc 6 100 23 is_stmt 0 discriminator 2 view .LVU79
 298              	.LBE129:
 110:MotoreAudio.cpp **** 	}
 111:MotoreAudio.cpp **** }
 299              		.loc 6 111 1 view .LVU80
 300 00be BDEC028B 		vldm	sp!, {d8}
 301              		.cfi_restore 80
 302              		.cfi_restore 81
 303              		.cfi_def_cfa_offset 40
 304 00c2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 305              	.LVL19:
 306              	.L14:
 307              		.loc 6 111 1 view .LVU81
 308 00c6 00BF     		.align	3
 309              	.L13:
 310 00c8 6ABC7493 		.word	-1821066134
 311 00cc 1804F03F 		.word	1072694296
 312 00d0 00000000 		.word	.LANCHOR0
 313 00d4 00000000 		.word	.LANCHOR2
 314 00d8 00000000 		.word	.LANCHOR1
 315              		.cfi_endproc
 316              	.LFE4682:
 318              		.section	.text.__tcf_2,"ax",%progbits
 319              		.align	1
 320              		.p2align 2,,3
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv5-d16
 326              	__tcf_2:
 327              	.LFB5253:
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE5253:
 336 0002 00BF     		.section	.text.__tcf_1,"ax",%progbits
 337              		.align	1
 338              		.p2align 2,,3
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv5-d16
 344              	__tcf_1:
 345              	.LFB5251:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 17


 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE5251:
 354 0002 00BF     		.section	.text._Z14InstrumentInitPA2_N7daisysp10OscillatorEf,"ax",%progbits
 355              		.align	1
 356              		.p2align 2,,3
 357              		.global	_Z14InstrumentInitPA2_N7daisysp10OscillatorEf
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv5-d16
 363              	_Z14InstrumentInitPA2_N7daisysp10OscillatorEf:
 364              	.LVL20:
 365              	.LFB4681:
  31:MotoreAudio.cpp **** 	//inizializza suoni
 366              		.loc 6 31 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
  33:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
 370              		.loc 6 33 2 view .LVU83
 371              	.LBB145:
  33:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
 372              		.loc 6 33 20 view .LVU84
 373              	.LBB146:
 374              	.LBB147:
 375              	.LBB148:
 376              	.LBB149:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 377              		.loc 7 53 27 is_stmt 0 view .LVU85
 378 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
 379              	.LBE149:
 380              	.LBE148:
 381              	.LBE147:
 382              	.LBE146:
 383              	.LBE145:
  31:MotoreAudio.cpp **** 	//inizializza suoni
 384              		.loc 6 31 1 view .LVU86
 385 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 386              		.cfi_def_cfa_offset 32
 387              		.cfi_offset 4, -32
 388              		.cfi_offset 5, -28
 389              		.cfi_offset 6, -24
 390              		.cfi_offset 7, -20
 391              		.cfi_offset 8, -16
 392              		.cfi_offset 9, -12
 393              		.cfi_offset 10, -8
 394              		.cfi_offset 14, -4
 395 0008 2DED028B 		vpush.64	{d8}
 396              		.cfi_def_cfa_offset 40
 397              		.cfi_offset 80, -40
 398              		.cfi_offset 81, -36
 399              	.LBB187:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 18


 400              	.LBB184:
 401              	.LBB180:
 402              	.LBB155:
 403              	.LBB150:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 404              		.loc 7 53 27 view .LVU87
 405 000c C7EE808A 		vdiv.f32	s17, s15, s0
 406              	.LBE150:
 407              	.LBE155:
 408              	.LBE180:
 409              	.LBE184:
  33:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
 410              		.loc 6 33 11 view .LVU88
 411 0010 4FF00009 		mov	r9, #0
 412 0014 0746     		mov	r7, r0
 413              	.LBE187:
  31:MotoreAudio.cpp **** 	//inizializza suoni
 414              		.loc 6 31 1 view .LVU89
 415 0016 B0EE408A 		vmov.f32	s16, s0
 416              	.LVL21:
 417              	.L22:
 418              	.LBB188:
 419              	.LBB185:
  34:MotoreAudio.cpp **** 
 420              		.loc 6 34 21 is_stmt 1 view .LVU90
 421              	.LBB181:
  36:MotoreAudio.cpp **** 			if (i == 2 && j ==1) k = 5; //forza la forma d'onda a triangolare quando  i +j +5 vuole andare a
 422              		.loc 6 36 4 view .LVU91
 423 001a 5FFA89F8 		uxtb	r8, r9
  37:MotoreAudio.cpp **** 
 424              		.loc 6 37 27 is_stmt 0 view .LVU92
 425 001e 3C46     		mov	r4, r7
 426              	.LBE181:
  34:MotoreAudio.cpp **** 
 427              		.loc 6 34 12 view .LVU93
 428 0020 4FF0000A 		mov	r10, #0
 429 0024 08F10505 		add	r5, r8, #5
 430 0028 EDB2     		uxtb	r5, r5
 431              	.LVL22:
 432              	.LBB182:
  37:MotoreAudio.cpp **** 
 433              		.loc 6 37 4 is_stmt 1 view .LVU94
 434              	.L18:
  40:MotoreAudio.cpp **** 			Voices[i][j].SetWaveform(k);
 435              		.loc 6 40 4 discriminator 2 view .LVU95
 436              	.LBB156:
 437              	.LBI148:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 438              		.loc 7 50 10 discriminator 2 view .LVU96
 439              	.LBB151:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 440              		.loc 7 52 9 discriminator 2 view .LVU97
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 441              		.loc 7 55 20 is_stmt 0 discriminator 2 view .LVU98
 442 002a 4FF07C56 		mov	r6, #1056964608
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 443              		.loc 7 57 20 discriminator 2 view .LVU99
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 19


 444 002e 0023     		movs	r3, #0
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 445              		.loc 7 54 20 discriminator 2 view .LVU100
 446 0030 9FED1F0A 		vldr.32	s0, .L27
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 447              		.loc 7 58 34 discriminator 2 view .LVU101
 448 0034 2046     		mov	r0, r4
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 449              		.loc 7 57 20 discriminator 2 view .LVU102
 450 0036 A361     		str	r3, [r4, #24]	@ float
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 451              		.loc 7 52 20 discriminator 2 view .LVU103
 452 0038 84ED048A 		vstr.32	s16, [r4, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 453              		.loc 7 53 9 is_stmt 1 discriminator 2 view .LVU104
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 454              		.loc 7 53 20 is_stmt 0 discriminator 2 view .LVU105
 455 003c C4ED058A 		vstr.32	s17, [r4, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 456              		.loc 7 54 9 is_stmt 1 discriminator 2 view .LVU106
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 457              		.loc 7 54 20 is_stmt 0 discriminator 2 view .LVU107
 458 0040 84ED020A 		vstr.32	s0, [r4, #8]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 459              		.loc 7 55 9 is_stmt 1 discriminator 2 view .LVU108
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 460              		.loc 7 55 20 is_stmt 0 discriminator 2 view .LVU109
 461 0044 6660     		str	r6, [r4, #4]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 462              		.loc 7 56 9 is_stmt 1 discriminator 2 view .LVU110
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 463              		.loc 7 56 20 is_stmt 0 discriminator 2 view .LVU111
 464 0046 E660     		str	r6, [r4, #12]	@ float
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 465              		.loc 7 57 9 is_stmt 1 discriminator 2 view .LVU112
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 466              		.loc 7 58 9 discriminator 2 view .LVU113
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 467              		.loc 7 58 34 is_stmt 0 discriminator 2 view .LVU114
 468 0048 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 469              	.LVL23:
 470              	.LBE151:
 471              	.LBE156:
 472              	.LBB157:
 473              	.LBB158:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 474              		.loc 7 81 19 discriminator 2 view .LVU115
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 20


 475 004c 082D     		cmp	r5, #8
 476              	.LBE158:
 477              	.LBE157:
 478              	.LBB162:
 479              	.LBB152:
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 480              		.loc 7 60 20 discriminator 2 view .LVU116
 481 004e 4FF00103 		mov	r3, #1
 482              	.LBE152:
 483              	.LBE162:
 484              	.LBB163:
 485              	.LBB164:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 486              		.loc 7 69 20 discriminator 2 view .LVU117
 487 0052 DFED187A 		vldr.32	s15, .L27+4
 488              	.LBE164:
 489              	.LBE163:
 490              	.LBB168:
 491              	.LBB159:
 492              		.loc 7 81 19 discriminator 2 view .LVU118
 493 0056 08BF     		it	eq
 494 0058 0025     		moveq	r5, #0
 495              	.LBE159:
 496              	.LBE168:
 497              	.LBB169:
 498              	.LBB153:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 499              		.loc 7 58 20 discriminator 2 view .LVU119
 500 005a 84ED070A 		vstr.32	s0, [r4, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 501              		.loc 7 59 9 is_stmt 1 discriminator 2 view .LVU120
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 502              		.loc 7 60 9 discriminator 2 view .LVU121
 503              	.LBE153:
 504              	.LBE169:
 505              	.LBB170:
 506              	.LBB165:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 507              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU122
 508 005e 2046     		mov	r0, r4
 509 0060 B0EE670A 		vmov.f32	s0, s15
 510              	.LBE165:
 511              	.LBE170:
 512              	.LBB171:
 513              	.LBB160:
 514              		.loc 7 81 19 discriminator 2 view .LVU123
 515 0064 2570     		strb	r5, [r4]
 516              	.LBE160:
 517              	.LBE171:
  37:MotoreAudio.cpp **** 
 518              		.loc 6 37 27 discriminator 2 view .LVU124
 519 0066 0525     		movs	r5, #5
 520              	.LBB172:
 521              	.LBB154:
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 522              		.loc 7 60 20 discriminator 2 view .LVU125
 523 0068 84F82930 		strb	r3, [r4, #41]
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 21


  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 524              		.loc 7 61 9 is_stmt 1 discriminator 2 view .LVU126
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 525              		.loc 7 61 20 is_stmt 0 discriminator 2 view .LVU127
 526 006c 84F82830 		strb	r3, [r4, #40]
 527              	.LVL24:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 528              		.loc 7 61 20 discriminator 2 view .LVU128
 529              	.LBE154:
 530              	.LBE172:
  41:MotoreAudio.cpp ****     		Voices[i][j].SetFreq(150);
 531              		.loc 6 41 4 is_stmt 1 discriminator 2 view .LVU129
 532              	.LBB173:
 533              	.LBI157:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 534              		.loc 7 79 17 discriminator 2 view .LVU130
 535              	.LBB161:
 536              		.loc 7 81 9 discriminator 2 view .LVU131
 537              		.loc 7 81 9 is_stmt 0 discriminator 2 view .LVU132
 538              	.LBE161:
 539              	.LBE173:
  42:MotoreAudio.cpp ****     		Voices[i][j].SetAmp(0.5);
 540              		.loc 6 42 7 is_stmt 1 discriminator 2 view .LVU133
 541              	.LBB174:
 542              	.LBI163:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 543              		.loc 7 67 17 discriminator 2 view .LVU134
 544              	.LBB166:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 545              		.loc 7 69 9 discriminator 2 view .LVU135
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 546              		.loc 7 69 20 is_stmt 0 discriminator 2 view .LVU136
 547 0070 C4ED027A 		vstr.32	s15, [r4, #8]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 548              		.loc 7 70 9 is_stmt 1 discriminator 2 view .LVU137
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 549              		.loc 7 70 34 is_stmt 0 discriminator 2 view .LVU138
 550 0074 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 551              	.LVL25:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 552              		.loc 7 70 34 discriminator 2 view .LVU139
 553              	.LBE166:
 554              	.LBE174:
  36:MotoreAudio.cpp **** 			if (i == 2 && j ==1) k = 5; //forza la forma d'onda a triangolare quando  i +j +5 vuole andare a
 555              		.loc 6 36 4 is_stmt 1 discriminator 2 view .LVU140
  37:MotoreAudio.cpp **** 
 556              		.loc 6 37 4 discriminator 2 view .LVU141
 557              	.LBB175:
 558              	.LBB176:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 559              		.loc 7 76 46 is_stmt 0 discriminator 2 view .LVU142
 560 0078 6660     		str	r6, [r4, #4]	@ float
 561              	.LBE176:
 562              	.LBE175:
 563              	.LBB178:
 564              	.LBB167:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 22


 565              		.loc 7 70 20 discriminator 2 view .LVU143
 566 007a 84ED070A 		vstr.32	s0, [r4, #28]
 567              	.LVL26:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 568              		.loc 7 70 20 discriminator 2 view .LVU144
 569              	.LBE167:
 570              	.LBE178:
  43:MotoreAudio.cpp **** 
 571              		.loc 6 43 7 is_stmt 1 discriminator 2 view .LVU145
 572              	.LBB179:
 573              	.LBI175:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 574              		.loc 7 76 17 discriminator 2 view .LVU146
 575              	.LBB177:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 576              		.loc 7 76 41 discriminator 2 view .LVU147
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 577              		.loc 7 76 41 is_stmt 0 discriminator 2 view .LVU148
 578              	.LBE177:
 579              	.LBE179:
 580              	.LBE182:
  34:MotoreAudio.cpp **** 
 581              		.loc 6 34 3 is_stmt 1 discriminator 2 view .LVU149
  34:MotoreAudio.cpp **** 
 582              		.loc 6 34 21 discriminator 2 view .LVU150
 583 007e BAF1000F 		cmp	r10, #0
 584 0082 09D0     		beq	.L21
 585              	.LBE185:
  33:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
 586              		.loc 6 33 2 discriminator 2 view .LVU151
 587 0084 09F10109 		add	r9, r9, #1
 588              	.LVL27:
  33:MotoreAudio.cpp **** 		for (int j = 0 ; j<m ; j++){
 589              		.loc 6 33 20 discriminator 2 view .LVU152
 590 0088 5837     		adds	r7, r7, #88
 591 008a B9F1030F 		cmp	r9, #3
 592 008e C4D1     		bne	.L22
 593              	.LBE188:
  90:MotoreAudio.cpp **** 
 594              		.loc 6 90 1 is_stmt 0 view .LVU153
 595 0090 BDEC028B 		vldm	sp!, {d8}
 596              		.cfi_remember_state
 597              		.cfi_restore 80
 598              		.cfi_restore 81
 599              		.cfi_def_cfa_offset 32
 600              	.LVL28:
  90:MotoreAudio.cpp **** 
 601              		.loc 6 90 1 view .LVU154
 602 0094 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 603              	.LVL29:
 604              	.L21:
 605              		.cfi_restore_state
 606              	.LBB189:
 607              	.LBB186:
 608              	.LBB183:
  37:MotoreAudio.cpp **** 
 609              		.loc 6 37 4 view .LVU155
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 23


 610 0098 B9F1020F 		cmp	r9, #2
 611 009c 03D1     		bne	.L26
 612              	.LVL30:
 613              	.L19:
  37:MotoreAudio.cpp **** 
 614              		.loc 6 37 4 view .LVU156
 615 009e 2C34     		adds	r4, r4, #44
  37:MotoreAudio.cpp **** 
 616              		.loc 6 37 27 discriminator 2 view .LVU157
 617 00a0 4FF0010A 		mov	r10, #1
 618              	.LVL31:
  37:MotoreAudio.cpp **** 
 619              		.loc 6 37 27 discriminator 2 view .LVU158
 620 00a4 C1E7     		b	.L18
 621              	.LVL32:
 622              	.L26:
  37:MotoreAudio.cpp **** 
 623              		.loc 6 37 27 discriminator 2 view .LVU159
 624 00a6 08F10605 		add	r5, r8, #6
 625              	.LVL33:
  37:MotoreAudio.cpp **** 
 626              		.loc 6 37 27 discriminator 2 view .LVU160
 627 00aa EDB2     		uxtb	r5, r5
  37:MotoreAudio.cpp **** 
 628              		.loc 6 37 27 discriminator 2 view .LVU161
 629 00ac F7E7     		b	.L19
 630              	.L28:
 631 00ae 00BF     		.align	2
 632              	.L27:
 633 00b0 0000C842 		.word	1120403456
 634 00b4 00001643 		.word	1125515264
 635              	.LBE183:
 636              	.LBE186:
 637              	.LBE189:
 638              		.cfi_endproc
 639              	.LFE4681:
 641              		.section	.text.startup.main,"ax",%progbits
 642              		.align	1
 643              		.p2align 2,,3
 644              		.global	main
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv5-d16
 650              	main:
 651              	.LFB4683:
 112:MotoreAudio.cpp **** 
 113:MotoreAudio.cpp **** int main(void)
 114:MotoreAudio.cpp **** {
 652              		.loc 6 114 1 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 24
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 115:MotoreAudio.cpp **** 	float sample_rate;
 656              		.loc 6 115 2 view .LVU163
 116:MotoreAudio.cpp **** 	hw.Configure();
 657              		.loc 6 116 2 view .LVU164
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 24


 114:MotoreAudio.cpp **** 	float sample_rate;
 658              		.loc 6 114 1 is_stmt 0 view .LVU165
 659 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 660              		.cfi_def_cfa_offset 20
 661              		.cfi_offset 4, -20
 662              		.cfi_offset 5, -16
 663              		.cfi_offset 6, -12
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666              		.loc 6 116 14 view .LVU166
 667 0002 3748     		ldr	r0, .L36
 114:MotoreAudio.cpp **** 	float sample_rate;
 668              		.loc 6 114 1 view .LVU167
 669 0004 87B0     		sub	sp, sp, #28
 670              		.cfi_def_cfa_offset 48
 671              		.loc 6 116 14 view .LVU168
 672 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 673              	.LVL34:
 117:MotoreAudio.cpp ****     hw.Init();
 674              		.loc 6 117 5 is_stmt 1 view .LVU169
 675              		.loc 6 117 12 is_stmt 0 view .LVU170
 676 000a 0021     		movs	r1, #0
 677 000c 3448     		ldr	r0, .L36
 678 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 679              	.LVL35:
 118:MotoreAudio.cpp ****     hw.SetAudioBlockSize(4);
 680              		.loc 6 118 5 is_stmt 1 view .LVU171
 681              		.loc 6 118 25 is_stmt 0 view .LVU172
 682 0012 0421     		movs	r1, #4
 683 0014 3248     		ldr	r0, .L36
 684 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 685              	.LVL36:
 119:MotoreAudio.cpp ****     sample_rate = hw.AudioSampleRate();
 686              		.loc 6 119 5 is_stmt 1 view .LVU173
 687              		.loc 6 119 37 is_stmt 0 view .LVU174
 688 001a 3148     		ldr	r0, .L36
 689 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 690              	.LVL37:
 120:MotoreAudio.cpp **** 
 121:MotoreAudio.cpp **** 	adcConfig[0].InitSingle(hw.GetPin(15));
 691              		.loc 6 121 25 view .LVU175
 692 0020 0F20     		movs	r0, #15
 119:MotoreAudio.cpp ****     sample_rate = hw.AudioSampleRate();
 693              		.loc 6 119 37 view .LVU176
 694 0022 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 695              	.LVL38:
 696              		.loc 6 121 2 is_stmt 1 view .LVU177
 697              		.loc 6 121 25 is_stmt 0 view .LVU178
 698 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 699              	.LVL39:
 700 002a 0346     		mov	r3, r0	@ movhi
 701 002c 0222     		movs	r2, #2
 702 002e 2D48     		ldr	r0, .L36+4
 703 0030 ADF80830 		strh	r3, [sp, #8]	@ movhi
 704 0034 0299     		ldr	r1, [sp, #8]
 705 0036 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 706              	.LVL40:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 25


 122:MotoreAudio.cpp **** 	adcConfig[1].InitSingle(hw.GetPin(16));
 707              		.loc 6 122 2 is_stmt 1 view .LVU179
 708              		.loc 6 122 25 is_stmt 0 view .LVU180
 709 003a 1020     		movs	r0, #16
 710 003c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 711              	.LVL41:
 712 0040 0346     		mov	r3, r0	@ movhi
 713 0042 0222     		movs	r2, #2
 714 0044 2848     		ldr	r0, .L36+8
 715 0046 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 716 004a 0399     		ldr	r1, [sp, #12]
 717 004c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 718              	.LVL42:
 123:MotoreAudio.cpp **** 	adcConfig[2].InitSingle(hw.GetPin(17));
 719              		.loc 6 123 2 is_stmt 1 view .LVU181
 720              		.loc 6 123 25 is_stmt 0 view .LVU182
 721 0050 1120     		movs	r0, #17
 722 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 723              	.LVL43:
 724 0056 0346     		mov	r3, r0	@ movhi
 725 0058 0222     		movs	r2, #2
 726 005a 2448     		ldr	r0, .L36+12
 727 005c ADF81030 		strh	r3, [sp, #16]	@ movhi
 728 0060 0499     		ldr	r1, [sp, #16]
 729 0062 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 730              	.LVL44:
 124:MotoreAudio.cpp **** 	adcConfig[3].InitSingle(hw.GetPin(18));
 731              		.loc 6 124 2 is_stmt 1 view .LVU183
 732              		.loc 6 124 25 is_stmt 0 view .LVU184
 733 0066 1220     		movs	r0, #18
 734 0068 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 735              	.LVL45:
 736 006c 0346     		mov	r3, r0	@ movhi
 737 006e 0222     		movs	r2, #2
 738 0070 1F48     		ldr	r0, .L36+16
 739 0072 ADF81430 		strh	r3, [sp, #20]	@ movhi
 740 0076 0599     		ldr	r1, [sp, #20]
 741 0078 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 742              	.LVL46:
 125:MotoreAudio.cpp ****     hw.adc.Init(adcConfig, 4);
 743              		.loc 6 125 5 is_stmt 1 view .LVU185
 744              		.loc 6 125 16 is_stmt 0 view .LVU186
 745 007c 0423     		movs	r3, #4
 746 007e 1949     		ldr	r1, .L36+4
 747 0080 1A46     		mov	r2, r3
 748 0082 1C48     		ldr	r0, .L36+20
 749 0084 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 750              	.LVL47:
 126:MotoreAudio.cpp ****     hw.adc.Start();
 751              		.loc 6 126 5 is_stmt 1 view .LVU187
 752              		.loc 6 126 17 is_stmt 0 view .LVU188
 753 0088 1A48     		ldr	r0, .L36+20
 754 008a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 755              	.LVL48:
 127:MotoreAudio.cpp **** 	
 128:MotoreAudio.cpp **** 
 129:MotoreAudio.cpp **** 
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 26


 130:MotoreAudio.cpp **** 
 131:MotoreAudio.cpp **** 	InstrumentInit(osc,sample_rate);
 756              		.loc 6 131 2 is_stmt 1 view .LVU189
 757              		.loc 6 131 16 is_stmt 0 view .LVU190
 758 008e 1A48     		ldr	r0, .L36+24
 759 0090 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 760 0094 FFF7FEFF 		bl	_Z14InstrumentInitPA2_N7daisysp10OscillatorEf
 761              	.LVL49:
 132:MotoreAudio.cpp **** 
 133:MotoreAudio.cpp **** 
 134:MotoreAudio.cpp **** 	hw.StartAudio(AudioCallback); // Avvia il processamento audio
 762              		.loc 6 134 2 is_stmt 1 view .LVU191
 763              		.loc 6 134 15 is_stmt 0 view .LVU192
 764 0098 1849     		ldr	r1, .L36+28
 765 009a 1148     		ldr	r0, .L36
 766 009c 184F     		ldr	r7, .L36+32
 767 009e FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 768              	.LVL50:
 769              	.L32:
 135:MotoreAudio.cpp **** 
 136:MotoreAudio.cpp **** 	while(1) {
 770              		.loc 6 136 2 is_stmt 1 view .LVU193
 771              	.LBB190:
 137:MotoreAudio.cpp **** 		// LEttura pots
 138:MotoreAudio.cpp **** 		for (int i = 0; i < 3 ; i++)
 772              		.loc 6 138 3 view .LVU194
 773              	.LBB191:
 774              		.loc 6 138 21 view .LVU195
 775 00a2 184D     		ldr	r5, .L36+36
 776              		.loc 6 138 12 is_stmt 0 view .LVU196
 777 00a4 0024     		movs	r4, #0
 778              	.LBE191:
 779              	.LBE190:
 114:MotoreAudio.cpp **** 	float sample_rate;
 780              		.loc 6 114 1 view .LVU197
 781 00a6 2E46     		mov	r6, r5
 782              	.LVL51:
 783              	.L30:
 784              	.LBB194:
 785              	.LBB192:
 139:MotoreAudio.cpp **** 		{
 140:MotoreAudio.cpp **** 			knob[i] = hw.adc.GetFloat(i);
 786              		.loc 6 140 4 is_stmt 1 discriminator 2 view .LVU198
 787              		.loc 6 140 29 is_stmt 0 discriminator 2 view .LVU199
 788 00a8 E1B2     		uxtb	r1, r4
 138:MotoreAudio.cpp **** 		{
 789              		.loc 6 138 3 discriminator 2 view .LVU200
 790 00aa 0134     		adds	r4, r4, #1
 791              	.LVL52:
 792              		.loc 6 140 29 discriminator 2 view .LVU201
 793 00ac 1148     		ldr	r0, .L36+20
 794 00ae FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 795              	.LVL53:
 138:MotoreAudio.cpp **** 		{
 796              		.loc 6 138 21 discriminator 2 view .LVU202
 797 00b2 032C     		cmp	r4, #3
 798              		.loc 6 140 12 discriminator 2 view .LVU203
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 27


 799 00b4 A6EC010A 		vstmia.32	r6!, {s0}
 138:MotoreAudio.cpp **** 		{
 800              		.loc 6 138 3 is_stmt 1 discriminator 2 view .LVU204
 801              	.LVL54:
 138:MotoreAudio.cpp **** 		{
 802              		.loc 6 138 21 discriminator 2 view .LVU205
 803 00b8 F6D1     		bne	.L30
 804 00ba 134B     		ldr	r3, .L36+40
 805              	.LBE192:
 141:MotoreAudio.cpp **** 		}
 142:MotoreAudio.cpp **** 
 143:MotoreAudio.cpp **** 		// setta le letture ai loro valori
 144:MotoreAudio.cpp **** 		float f_base = startingFreq;
 806              		.loc 6 144 9 is_stmt 0 view .LVU206
 807 00bc DFED137A 		vldr.32	s15, .L36+44
 808              	.L31:
 809              	.LVL55:
 810              	.LBB193:
 145:MotoreAudio.cpp **** 		for (int i = 0 ; i < n ; i++){
 146:MotoreAudio.cpp **** 			f[i]= f_base + knob[i]*f_base;
 811              		.loc 6 146 4 is_stmt 1 discriminator 2 view .LVU207
 812              		.loc 6 146 17 is_stmt 0 discriminator 2 view .LVU208
 813 00c0 B0EE677A 		vmov.f32	s14, s15
 814              		.loc 6 146 25 discriminator 2 view .LVU209
 815 00c4 F5EC016A 		vldmia.32	r5!, {s13}
 145:MotoreAudio.cpp **** 		for (int i = 0 ; i < n ; i++){
 816              		.loc 6 145 22 discriminator 2 view .LVU210
 817 00c8 BD42     		cmp	r5, r7
 818              		.loc 6 146 17 discriminator 2 view .LVU211
 819 00ca A6EEA77A 		vfma.f32	s14, s13, s15
 147:MotoreAudio.cpp **** 			f_base += f_base;
 820              		.loc 6 147 11 discriminator 2 view .LVU212
 821 00ce 77EEA77A 		vadd.f32	s15, s15, s15
 822              	.LVL56:
 146:MotoreAudio.cpp **** 			f_base += f_base;
 823              		.loc 6 146 8 discriminator 2 view .LVU213
 824 00d2 A3EC017A 		vstmia.32	r3!, {s14}
 825              		.loc 6 147 4 is_stmt 1 discriminator 2 view .LVU214
 826              	.LVL57:
 145:MotoreAudio.cpp **** 		for (int i = 0 ; i < n ; i++){
 827              		.loc 6 145 3 discriminator 2 view .LVU215
 145:MotoreAudio.cpp **** 		for (int i = 0 ; i < n ; i++){
 828              		.loc 6 145 22 discriminator 2 view .LVU216
 829 00d6 F3D1     		bne	.L31
 830              	.LBE193:
 148:MotoreAudio.cpp **** 		}
 149:MotoreAudio.cpp **** 	System::Delay(1);
 831              		.loc 6 149 2 view .LVU217
 832              		.loc 6 149 15 is_stmt 0 view .LVU218
 833 00d8 0120     		movs	r0, #1
 834 00da FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 835              	.LVL58:
 836              		.loc 6 149 15 view .LVU219
 837              	.LBE194:
 136:MotoreAudio.cpp **** 		// LEttura pots
 838              		.loc 6 136 2 is_stmt 1 view .LVU220
 150:MotoreAudio.cpp **** 	}
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 28


 839              		.loc 6 150 2 is_stmt 0 view .LVU221
 840 00de E0E7     		b	.L32
 841              	.L37:
 842              		.align	2
 843              	.L36:
 844 00e0 00000000 		.word	.LANCHOR3
 845 00e4 00000000 		.word	.LANCHOR4
 846 00e8 12000000 		.word	.LANCHOR4+18
 847 00ec 24000000 		.word	.LANCHOR4+36
 848 00f0 36000000 		.word	.LANCHOR4+54
 849 00f4 18000000 		.word	.LANCHOR3+24
 850 00f8 00000000 		.word	.LANCHOR1
 851 00fc 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 852 0100 0C000000 		.word	.LANCHOR5+12
 853 0104 00000000 		.word	.LANCHOR5
 854 0108 00000000 		.word	.LANCHOR0
 855 010c 00001643 		.word	1125515264
 856              		.cfi_endproc
 857              	.LFE4683:
 859              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 860              		.align	1
 861              		.p2align 2,,3
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv5-d16
 867              	_GLOBAL__sub_I_hw:
 868              	.LFB5249:
 151:MotoreAudio.cpp **** }
 869              		.loc 6 151 1 is_stmt 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LBB223:
 874              	.LBI223:
 875              		.loc 6 151 1 view .LVU223
 876              	.LVL59:
 877              	.LBB224:
 878              	.LBB225:
 879              	.LBI225:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 880              		.loc 1 21 5 view .LVU224
 881              	.LBB226:
 882              	.LBB227:
 883              	.LBI227:
 884              		.file 8 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 29


  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 30


  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 31


 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 885              		.loc 8 166 5 view .LVU225
 886              	.LBB228:
 887              	.LBB229:
 888              		.loc 8 166 34 is_stmt 0 view .LVU226
 889 0000 0023     		movs	r3, #0
 890 0002 2E48     		ldr	r0, .L44
 891              	.LBE229:
 892              	.LBE228:
 893              	.LBE227:
 894              	.LBE226:
 895              	.LBE225:
  12:MotoreAudio.cpp **** AdcChannelConfig adcConfig[4]; // 3 canali ADC, Diventerà la lettura capacitiva
 896              		.loc 6 12 19 view .LVU227
 897 0004 2E4A     		ldr	r2, .L44+4
 898 0006 2F49     		ldr	r1, .L44+8
 899              	.LBE224:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 32


 900              	.LBE223:
 901              		.loc 6 151 1 view .LVU228
 902 0008 10B5     		push	{r4, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 4, -8
 905              		.cfi_offset 14, -4
 906              	.LBB259:
 907              	.LBB257:
 908              	.LBB246:
 909              	.LBB245:
 910              	.LBB232:
 911              	.LBB231:
 912              	.LBB230:
 913              		.loc 8 166 34 view .LVU229
 914 000a 0360     		str	r3, [r0]
 915              	.LVL60:
 916              		.loc 8 166 34 view .LVU230
 917              	.LBE230:
 918              	.LBE231:
 919              	.LBE232:
 920              	.LBB233:
 921              	.LBI233:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 922              		.loc 5 95 5 is_stmt 1 view .LVU231
 923              	.LBB234:
 924              	.LBB235:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 925              		.loc 5 95 35 is_stmt 0 view .LVU232
 926 000c 4361     		str	r3, [r0, #20]
 927              	.LVL61:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 928              		.loc 5 95 35 view .LVU233
 929              	.LBE235:
 930              	.LBE234:
 931              	.LBE233:
 932              	.LBB236:
 933              	.LBI236:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 934              		.loc 4 109 5 is_stmt 1 view .LVU234
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 935              		.loc 4 109 5 is_stmt 0 view .LVU235
 936              	.LBE236:
 937              	.LBB237:
 938              	.LBI237:
 939              		.file 9 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 33


  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 34


  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 940              		.loc 9 84 5 is_stmt 1 view .LVU236
 941              	.LBB238:
 942              	.LBB239:
 943              		.loc 9 84 33 is_stmt 0 view .LVU237
 944 000e 0362     		str	r3, [r0, #32]
 945              	.LVL62:
 946              		.loc 9 84 33 view .LVU238
 947              	.LBE239:
 948              	.LBE238:
 949              	.LBE237:
 950              	.LBB240:
 951              	.LBI240:
  40:../../libDaisy//src/hid/usb.h **** 
 952              		.loc 3 40 5 is_stmt 1 view .LVU239
  40:../../libDaisy//src/hid/usb.h **** 
 953              		.loc 3 40 5 is_stmt 0 view .LVU240
 954              	.LBE240:
 955              	.LBB241:
 956              	.LBI241:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 957              		.loc 2 96 5 is_stmt 1 view .LVU241
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 958              		.loc 2 96 5 is_stmt 0 view .LVU242
 959              	.LBE241:
 960              	.LBB242:
 961              	.LBI242:
 962              		.file 10 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 35


  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 36


  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 963              		.loc 10 108 5 is_stmt 1 view .LVU243
 964              	.LBB243:
 965              	.LBB244:
 966              		.loc 10 108 33 is_stmt 0 view .LVU244
 967 0010 C363     		str	r3, [r0, #60]
 968              	.LVL63:
 969              		.loc 10 108 33 view .LVU245
 970              	.LBE244:
 971              	.LBE243:
 972              	.LBE242:
 973              	.LBE245:
 974              	.LBE246:
  12:MotoreAudio.cpp **** AdcChannelConfig adcConfig[4]; // 3 canali ADC, Diventerà la lettura capacitiva
 975              		.loc 6 12 19 view .LVU246
 976 0012 FFF7FEFF 		bl	__aeabi_atexit
 977              	.LVL64:
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 978              		.loc 6 17 22 is_stmt 1 view .LVU247
 979 0016 2C4B     		ldr	r3, .L44+12
 980 0018 03F19004 		add	r4, r3, #144
 981              	.L39:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 37


 982              	.LVL65:
 983              	.LBB247:
 984              	.LBI247:
 985              		.file 11 "../../DaisySP//Source/Control/adsr.h"
   1:../../DaisySP//Source/Control/adsr.h **** /*
   2:../../DaisySP//Source/Control/adsr.h **** Copyright (c) 2020 Electrosmith, Corp, Paul Batchelor
   3:../../DaisySP//Source/Control/adsr.h **** 
   4:../../DaisySP//Source/Control/adsr.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Control/adsr.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Control/adsr.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Control/adsr.h **** */
   8:../../DaisySP//Source/Control/adsr.h **** 
   9:../../DaisySP//Source/Control/adsr.h **** #pragma once
  10:../../DaisySP//Source/Control/adsr.h **** #ifndef DSY_ADSR_H
  11:../../DaisySP//Source/Control/adsr.h **** #define DSY_ADSR_H
  12:../../DaisySP//Source/Control/adsr.h **** 
  13:../../DaisySP//Source/Control/adsr.h **** #include <stdint.h>
  14:../../DaisySP//Source/Control/adsr.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Control/adsr.h **** 
  16:../../DaisySP//Source/Control/adsr.h **** namespace daisysp
  17:../../DaisySP//Source/Control/adsr.h **** {
  18:../../DaisySP//Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  19:../../DaisySP//Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  20:../../DaisySP//Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  21:../../DaisySP//Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  22:../../DaisySP//Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  23:../../DaisySP//Source/Control/adsr.h **** */
  24:../../DaisySP//Source/Control/adsr.h **** enum
  25:../../DaisySP//Source/Control/adsr.h **** {
  26:../../DaisySP//Source/Control/adsr.h ****     ADSR_SEG_IDLE    = 0,
  27:../../DaisySP//Source/Control/adsr.h ****     ADSR_SEG_ATTACK  = 1,
  28:../../DaisySP//Source/Control/adsr.h ****     ADSR_SEG_DECAY   = 2,
  29:../../DaisySP//Source/Control/adsr.h ****     ADSR_SEG_RELEASE = 4
  30:../../DaisySP//Source/Control/adsr.h **** };
  31:../../DaisySP//Source/Control/adsr.h **** 
  32:../../DaisySP//Source/Control/adsr.h **** 
  33:../../DaisySP//Source/Control/adsr.h **** /** adsr envelope module
  34:../../DaisySP//Source/Control/adsr.h **** 
  35:../../DaisySP//Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  36:../../DaisySP//Source/Control/adsr.h **** 
  37:../../DaisySP//Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  38:../../DaisySP//Source/Control/adsr.h ****  
  39:../../DaisySP//Source/Control/adsr.h **** Remake by Steffan DIedrichsen, May 2021
  40:../../DaisySP//Source/Control/adsr.h **** */
  41:../../DaisySP//Source/Control/adsr.h **** class Adsr
  42:../../DaisySP//Source/Control/adsr.h **** {
  43:../../DaisySP//Source/Control/adsr.h ****   public:
  44:../../DaisySP//Source/Control/adsr.h ****     Adsr() {}
 986              		.loc 11 44 5 view .LVU248
 987              	.LBE247:
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 988              		.loc 6 17 22 is_stmt 0 view .LVU249
 989 001c 3033     		adds	r3, r3, #48
 990              	.LVL66:
 991              	.LBB250:
 992              	.LBB248:
 993              		.loc 11 44 12 view .LVU250
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 38


 994 001e 0022     		movs	r2, #0
 995 0020 2A49     		ldr	r1, .L44+16
 996 0022 0020     		movs	r0, #0
 997              	.LBE248:
 998              	.LBE250:
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 999              		.loc 6 17 22 view .LVU251
 1000 0024 A342     		cmp	r3, r4
 1001              	.LBB251:
 1002              	.LBB249:
 1003              		.loc 11 44 12 view .LVU252
 1004 0026 43F8302C 		str	r2, [r3, #-48]	@ float
 1005 002a 43F82C2C 		str	r2, [r3, #-44]	@ float
 1006 002e 43F8281C 		str	r1, [r3, #-40]	@ float
 1007 0032 43F8242C 		str	r2, [r3, #-36]	@ float
 1008 0036 43F8201C 		str	r1, [r3, #-32]	@ float
 1009 003a 43F81C1C 		str	r1, [r3, #-28]	@ float
 1010 003e 43F8181C 		str	r1, [r3, #-24]	@ float
 1011 0042 43F8142C 		str	r2, [r3, #-20]	@ float
 1012 0046 43F8102C 		str	r2, [r3, #-16]	@ float
 1013 004a 43F80C2C 		str	r2, [r3, #-12]	@ float
 1014 004e 03F8040C 		strb	r0, [r3, #-4]
 1015 0052 03F8030C 		strb	r0, [r3, #-3]
 1016              	.LVL67:
 1017              		.loc 11 44 12 view .LVU253
 1018              	.LBE249:
 1019              	.LBE251:
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 1020              		.loc 6 17 22 is_stmt 1 view .LVU254
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 1021              		.loc 6 17 22 view .LVU255
 1022 0056 E1D1     		bne	.L39
  17:MotoreAudio.cpp **** Adsr	    LPF_env[n]; // inviluppi al filtro
 1023              		.loc 6 17 13 is_stmt 0 view .LVU256
 1024 0058 194A     		ldr	r2, .L44+4
 1025 005a 1D49     		ldr	r1, .L44+20
 1026 005c FFF7FEFF 		bl	__aeabi_atexit
 1027              	.LVL68:
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1028              		.loc 6 18 19 is_stmt 1 view .LVU257
 1029 0060 1C4B     		ldr	r3, .L44+24
 1030 0062 03F19000 		add	r0, r3, #144
 1031              	.L40:
 1032              	.LVL69:
 1033              	.LBB252:
 1034              	.LBI252:
 1035              		.loc 11 44 5 view .LVU258
 1036              	.LBE252:
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1037              		.loc 6 18 19 is_stmt 0 view .LVU259
 1038 0066 3033     		adds	r3, r3, #48
 1039              	.LVL70:
 1040              	.LBB255:
 1041              	.LBB253:
 1042              		.loc 11 44 12 view .LVU260
 1043 0068 0022     		movs	r2, #0
 1044 006a 1849     		ldr	r1, .L44+16
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 39


 1045 006c 0024     		movs	r4, #0
 1046              	.LBE253:
 1047              	.LBE255:
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1048              		.loc 6 18 19 view .LVU261
 1049 006e 8342     		cmp	r3, r0
 1050              	.LBB256:
 1051              	.LBB254:
 1052              		.loc 11 44 12 view .LVU262
 1053 0070 43F8302C 		str	r2, [r3, #-48]	@ float
 1054 0074 43F82C2C 		str	r2, [r3, #-44]	@ float
 1055 0078 43F8281C 		str	r1, [r3, #-40]	@ float
 1056 007c 43F8242C 		str	r2, [r3, #-36]	@ float
 1057 0080 43F8201C 		str	r1, [r3, #-32]	@ float
 1058 0084 43F81C1C 		str	r1, [r3, #-28]	@ float
 1059 0088 43F8181C 		str	r1, [r3, #-24]	@ float
 1060 008c 43F8142C 		str	r2, [r3, #-20]	@ float
 1061 0090 43F8102C 		str	r2, [r3, #-16]	@ float
 1062 0094 43F80C2C 		str	r2, [r3, #-12]	@ float
 1063 0098 03F8044C 		strb	r4, [r3, #-4]
 1064 009c 03F8034C 		strb	r4, [r3, #-3]
 1065              	.LVL71:
 1066              		.loc 11 44 12 view .LVU263
 1067              	.LBE254:
 1068              	.LBE256:
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1069              		.loc 6 18 19 is_stmt 1 view .LVU264
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1070              		.loc 6 18 19 view .LVU265
 1071 00a0 E1D1     		bne	.L40
  18:MotoreAudio.cpp **** Oscillator   osc[n][m]; // oscillatori n suoni e m voci
 1072              		.loc 6 18 10 is_stmt 0 view .LVU266
 1073 00a2 074A     		ldr	r2, .L44+4
 1074 00a4 2046     		mov	r0, r4
 1075 00a6 0C49     		ldr	r1, .L44+28
 1076 00a8 FFF7FEFF 		bl	__aeabi_atexit
 1077              	.LVL72:
  19:MotoreAudio.cpp **** 
 1078              		.loc 6 19 22 is_stmt 1 view .LVU267
  19:MotoreAudio.cpp **** 
 1079              		.loc 6 19 14 is_stmt 0 view .LVU268
 1080 00ac 2046     		mov	r0, r4
 1081 00ae 044A     		ldr	r2, .L44+4
 1082 00b0 0A49     		ldr	r1, .L44+32
 1083              	.LBE257:
 1084              	.LBE259:
 1085              		.loc 6 151 1 view .LVU269
 1086 00b2 BDE81040 		pop	{r4, lr}
 1087              		.cfi_restore 14
 1088              		.cfi_restore 4
 1089              		.cfi_def_cfa_offset 0
 1090              	.LBB260:
 1091              	.LBB258:
  19:MotoreAudio.cpp **** 
 1092              		.loc 6 19 14 view .LVU270
 1093 00b6 FFF7FEBF 		b	__aeabi_atexit
 1094              	.LVL73:
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 40


 1095              	.L45:
 1096 00ba 00BF     		.align	2
 1097              	.L44:
 1098 00bc 00000000 		.word	.LANCHOR3
 1099 00c0 00000000 		.word	__dso_handle
 1100 00c4 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1101 00c8 00000000 		.word	.LANCHOR6
 1102 00cc 000080BF 		.word	-1082130432
 1103 00d0 00000000 		.word	__tcf_0
 1104 00d4 00000000 		.word	.LANCHOR7
 1105 00d8 00000000 		.word	__tcf_1
 1106 00dc 00000000 		.word	__tcf_2
 1107              	.LBE258:
 1108              	.LBE260:
 1109              		.cfi_endproc
 1110              	.LFE5249:
 1112              		.section	.init_array,"aw",%init_array
 1113              		.align	2
 1114 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1115              		.global	f
 1116              		.global	Suono
 1117              		.global	osc
 1118              		.global	LPF_env
 1119              		.global	Amp_env
 1120              		.global	knob
 1121              		.global	adcConfig
 1122              		.global	hw
 1123              		.section	.bss.Amp_env,"aw",%nobits
 1124              		.align	2
 1125              		.set	.LANCHOR6,. + 0
 1128              	Amp_env:
 1129 0000 00000000 		.space	144
 1129      00000000 
 1129      00000000 
 1129      00000000 
 1129      00000000 
 1130              		.section	.bss.LPF_env,"aw",%nobits
 1131              		.align	2
 1132              		.set	.LANCHOR7,. + 0
 1135              	LPF_env:
 1136 0000 00000000 		.space	144
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1136      00000000 
 1137              		.section	.bss.Suono,"aw",%nobits
 1138              		.align	2
 1139              		.set	.LANCHOR2,. + 0
 1142              	Suono:
 1143 0000 00000000 		.space	12
 1143      00000000 
 1143      00000000 
 1144              		.section	.bss.adcConfig,"aw",%nobits
 1145              		.align	2
 1146              		.set	.LANCHOR4,. + 0
 1149              	adcConfig:
 1150 0000 00000000 		.space	72
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 41


 1150      00000000 
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1151              		.section	.bss.f,"aw",%nobits
 1152              		.align	2
 1153              		.set	.LANCHOR0,. + 0
 1156              	f:
 1157 0000 00000000 		.space	12
 1157      00000000 
 1157      00000000 
 1158              		.section	.bss.hw,"aw",%nobits
 1159              		.align	2
 1160              		.set	.LANCHOR3,. + 0
 1163              	hw:
 1164 0000 00000000 		.space	64
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1165              		.section	.bss.knob,"aw",%nobits
 1166              		.align	2
 1167              		.set	.LANCHOR5,. + 0
 1170              	knob:
 1171 0000 00000000 		.space	12
 1171      00000000 
 1171      00000000 
 1172              		.section	.bss.osc,"aw",%nobits
 1173              		.align	2
 1174              		.set	.LANCHOR1,. + 0
 1177              	osc:
 1178 0000 00000000 		.space	264
 1178      00000000 
 1178      00000000 
 1178      00000000 
 1178      00000000 
 1179              		.text
 1180              	.Letext0:
 1181              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1182              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1183              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1184              		.file 15 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1185              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1186              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1187              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1188              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1189              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1190              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1191              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1192              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1193              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1194              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1195              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1196              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1197              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1198              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1199              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 42


 1200              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1201              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 1202              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1203              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1204              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1205              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1206              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1207              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1208              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1209              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1210              		.file 41 "../../libDaisy//src/daisy_core.h"
 1211              		.file 42 "../../libDaisy//src/per/tim.h"
 1212              		.file 43 "../../libDaisy//src/util/wav_format.h"
 1213              		.file 44 "../../libDaisy//src/dev/max11300.h"
 1214              		.file 45 "../../libDaisy//src/per/gpio.h"
 1215              		.file 46 "../../libDaisy//src/dev/sdram.h"
 1216              		.file 47 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1217              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1218              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1219              		.file 50 "../../DaisySP//Source/Control/adenv.h"
 1220              		.file 51 "../../DaisySP//Source/Utility/dsp.h"
 1221              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1222              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1223              		.file 54 "<built-in>"
 1224              		.file 55 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 MotoreAudio.cpp
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:67     .text.__tcf_0:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:74     .text.__tcf_0:00000000 __tcf_0
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:88     .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:96     .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:310    .text._Z13AudioCallbackPKPKfPPfj:000000c8 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:319    .text.__tcf_2:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:326    .text.__tcf_2:00000000 __tcf_2
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:337    .text.__tcf_1:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:344    .text.__tcf_1:00000000 __tcf_1
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:355    .text._Z14InstrumentInitPA2_N7daisysp10OscillatorEf:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:363    .text._Z14InstrumentInitPA2_N7daisysp10OscillatorEf:00000000 _Z14InstrumentInitPA2_N7daisysp10OscillatorEf
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:633    .text._Z14InstrumentInitPA2_N7daisysp10OscillatorEf:000000b0 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:642    .text.startup.main:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:650    .text.startup.main:00000000 main
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:844    .text.startup.main:000000e0 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:860    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:867    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1098   .text.startup._GLOBAL__sub_I_hw:000000bc $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1113   .init_array:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1156   .bss.f:00000000 f
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1142   .bss.Suono:00000000 Suono
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1177   .bss.osc:00000000 osc
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1135   .bss.LPF_env:00000000 LPF_env
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1128   .bss.Amp_env:00000000 Amp_env
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1170   .bss.knob:00000000 knob
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1149   .bss.adcConfig:00000000 adcConfig
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1163   .bss.hw:00000000 hw
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1124   .bss.Amp_env:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1131   .bss.LPF_env:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1138   .bss.Suono:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1145   .bss.adcConfig:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1152   .bss.f:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1159   .bss.hw:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1166   .bss.knob:00000000 $d
C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s:1173   .bss.osc:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy6System5DelayEm
__aeabi_atexit
ARM GAS  C:\Users\skipi\AppData\Local\Temp\cckze0Hg.s 			page 44


__dso_handle
