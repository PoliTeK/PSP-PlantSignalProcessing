ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Effect.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",%progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZNKSt5ctypeIcE8do_widenEc
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZNKSt5ctypeIcE8do_widenEc:
  27              	.LVL0:
  28              	.LFB1847:
  29              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\locale_face
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // Locale support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** /** @file bits/locale_facets.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 2


  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <cwctype>	// For wctype_t
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <cctype>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <bits/ctype_base.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <iosfwd>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <streambuf>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <ext/type_traits.h>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <ext/numeric_traits.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #else
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #else
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** #endif
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // generic definition.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const __c_locale&) throw();
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // Explicit specializations for required types.
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     void
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const __c_locale&) throw();
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     void
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const __c_locale&) throw();
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 3


  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     void
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const __c_locale&) throw();
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // partially-specialized.
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     struct __pad
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       static void
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // Used by both numeric and monetary facets.
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // only with __gsize != 0.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT>
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     _CharT*
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // This template permits specializing facet output code for
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     inline
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       __s._M_put(__ws, __len);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       return __s;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     }
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // This is the unspecialized form of the template.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     inline
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     _OutIter
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	*__s = __ws[__j];
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       return __s;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  @brief  Common base for ctype facet
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  This template class provides implementations of the public functions
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 4


 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  that forward to the protected virtual functions.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  functions.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     public:
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // Types:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// Typedef for the template parameter
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       typedef _CharT char_type;
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Test char_type classification.
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_is().
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  (M & __m) != 0.
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       bool
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       is(mask __m, char_type __c) const
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_is(__m, __c); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Return a mask array.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_is().
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 5


 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to uppercase.
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       toupper(char_type __c) const
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_toupper(__c); }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to lowercase.
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 6


 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       tolower(char_type __c) const
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_tolower(__c); }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char to char_type
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted char_type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       widen(char __c) const
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_widen(__c); }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen array to char_type
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char*
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 7


 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow char_type to char
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  returned instead.  It does so by returning
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted char.
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow array to char array
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	      char __dfault, char* __to) const
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       explicit
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ~__ctype_abstract_base() { }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Test char_type classification.
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 8


 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  (M & __m) != 0.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual bool
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Return a mask array.
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  as the input.
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    mask* __vec) const = 0;
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char_type matching mask
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 9


 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to uppercase.
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  argument.
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to lowercase.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 10


 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted char_type
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_widen(char __c) const = 0;
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char array
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char*
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 11


 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow char_type to char
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  is returned instead.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char_type to convert.
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted char.
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  transformation and writes the results to the destination
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     };
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   /**
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  @ingroup locales
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  streams for many I/O operations.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 12


 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  __ctype_abstract_base.
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  functions, but will likely not be useful.
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   */
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT>
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     public:
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // Types:
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       typedef _CharT			char_type;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// The facet id for ctype<char_type>
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       static locale::id			id;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       explicit
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    protected:
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ~ctype();
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual bool
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		  const char_type* __hi) const;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type __c) const;
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type __c) const;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_widen(char __c) const;
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 13


 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char*
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 		char __dfault, char* __to) const;
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     };
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<typename _CharT>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  @ingroup locales
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  This class defines classification and conversion functions for
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****    *  optimizations as well.
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   */
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****   template<>
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     {
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     public:
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // Types:
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// Typedef for the template parameter char.
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       typedef char		char_type;
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     protected:
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // Data Members:
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       bool			_M_del;
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       __to_type			_M_toupper;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       __to_type			_M_tolower;
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const mask*		_M_table;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       mutable char		_M_widen_ok;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 						// 2 memcpy can't be used
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     public:
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// The facet id for ctype<char>
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       static locale::id        id;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This is the constructor provided by the standard.
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *               Else classic_table() is used.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 14


 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       explicit
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       explicit
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    size_t __refs = 0);
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Test char classification.
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       inline bool
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       is(mask __m, char __c) const;
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Return a mask array.
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the char array.
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       inline const char*
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char matching a mask
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  which is(m,char) is true.
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 15


 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       inline const char*
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Find char not matching a mask
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __m  The mask to compare against.
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       inline const char*
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to uppercase.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       toupper(char_type __c) const
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_toupper(__c); }
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to lowercase.
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 16


 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       tolower(char_type __c) const
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_tolower(__c); }
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  argument will be returned unchanged.
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted character.
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char_type
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       widen(char __c) const
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (_M_widen_ok)
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	this->_M_widen_init();
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_widen(__c);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char array
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the input to char using the
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation.  For an underived ctype<char>
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 17


 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  facet, the argument will be copied unchanged.
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char*
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (_M_widen_ok == 1)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  {
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    if (__builtin_expect(__hi != __lo, true))
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	      __builtin_memcpy(__to, __lo, __hi - __lo);
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    return __hi;
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  }
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (!_M_widen_ok)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  _M_widen_init();
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_widen(__lo, __hi, __to);
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow char
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts the char to char using the simplest
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  returned instead.  For an underived ctype<char> facet, @a c
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  will be returned unchanged.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(c).
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_narrow() must always return the same result for the same input.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted character.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       char
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       narrow(char_type __c, char __dfault) const
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (_M_narrow[static_cast<unsigned char>(__c)])
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  return _M_narrow[static_cast<unsigned char>(__c)];
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	const char __t = do_narrow(__c, __dfault);
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (__t != __dfault)
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  _M_narrow[static_cast<unsigned char>(__c)] = __t;
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return __t;
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 18


 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Narrow char array
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function converts each char in the input to char using the
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  destination array.  For any char in the input that cannot be
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  converted, @a dfault is used instead.  For an underived ctype<char>
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  facet, the argument will be copied unchanged.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(lo, hi,
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  dfault, to).  do_narrow() must always return the same result for the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __to  Pointer to the destination array.
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const char_type*
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	     char __dfault, char* __to) const
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (__builtin_expect(_M_narrow_ok == 1, true))
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  {
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    if (__builtin_expect(__hi != __lo, true))
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	      __builtin_memcpy(__to, __lo, __hi - __lo);
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	    return __hi;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  }
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	if (!_M_narrow_ok)
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  _M_narrow_init();
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_narrow(__lo, __hi, __dfault, __to);
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       // DR 695. ctype<char>::classic_table() not accessible.
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// Returns a pointer to the mask table provided to the constructor, or
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// the default from classic_table() if none was provided.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       const mask*
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       table() const throw()
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return _M_table; }
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /// Returns a pointer to the C locale mask table.
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       static const mask*
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       classic_table() throw();
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****     protected:
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Destructor.
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This function deletes table() if @a del was true in the
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  constructor.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       ~ctype();
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 19


 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to uppercase.
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the char argument to uppercase if
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type __c) const;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to uppercase.
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercase if possible.  Other chars remain untouched.
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to start of range.
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert to lowercase.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the char argument to lowercase if
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type __c) const;
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Convert array to lowercase.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercase if possible.  Other chars remain untouched.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 20


1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  the same input.
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __lo  Pointer to first char in range.
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __hi  Pointer to end of range.
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  @a __hi.
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual const char_type*
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       /**
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @brief  Widen char
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  This virtual function converts the char to char using the simplest
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  argument will be returned unchanged.
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  same input.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  codecvt for that.
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @param __c  The char to convert.
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****        *  @return  The converted character.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       */
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       virtual char_type
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       do_widen(char __c) const
  30              		.loc 1 1084 7 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       { return __c; }
  35              		.loc 1 1085 9 view .LVU1
  36              		.loc 1 1085 21 is_stmt 0 view .LVU2
  37 0000 0846     		mov	r0, r1
  38              	.LVL1:
  39              		.loc 1 1085 21 view .LVU3
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE1847:
  44              		.section	.rodata._ZN6Effect5beginEPi.str1.4,"aMS",%progbits,1
  45              		.align	2
  46              	.LC0:
  47 0000 4E756D65 		.ascii	"Numero sbagliato di soglie\000"
  47      726F2073 
  47      6261676C 
  47      6961746F 
  47      20646920 
  48              		.section	.text._ZN6Effect5beginEPi,"ax",%progbits
  49              		.align	1
  50              		.p2align 2,,3
  51              		.global	_ZN6Effect5beginEPi
  52              		.syntax unified
  53              		.thumb
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 21


  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN6Effect5beginEPi:
  58              	.LVL2:
  59              	.LFB2096:
  60              		.file 2 "Effect.cpp"
   1:Effect.cpp    **** #include "Effect.h"
   2:Effect.cpp    **** 
   3:Effect.cpp    **** 
   4:Effect.cpp    ****     void Effect::begin(int* thresholdsI){
  61              		.loc 2 4 41 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
   5:Effect.cpp    ****         if (sizeof(_thresholds) / sizeof(_thresholds[0]) != 7){         //controls that the size of
  65              		.loc 2 5 9 view .LVU5
   6:Effect.cpp    ****             std::cout<<"Numero sbagliato di soglie"<<std::endl;
  66              		.loc 2 6 13 view .LVU6
  67              	.LBB52:
  68              	.LBI52:
  69              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ostream"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // Output streams -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** /** @file include/ostream
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****  *  This is a Standard C++ Library header.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** //
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** //
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifndef _GLIBCXX_OSTREAM
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #define _GLIBCXX_OSTREAM 1
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #pragma GCC system_header
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 22


  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #include <ios>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #include <bits/ostream_insert.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Template class basic_ostream.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @ingroup io
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @tparam _CharT  Type of character stream.
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *                   char_traits<_CharT>.
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  This is the base class for all output streams.  It provides text
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  formatting of all builtin types, and communicates with any class
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  derived from basic_streambuf to do the actual output.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     {
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     public:
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       // Types (inherited from basic_ios):
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef _CharT			 		char_type;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef typename _Traits::int_type 		int_type;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef typename _Traits::off_type 		off_type;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef _Traits			 		traits_type;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       // Non-standard Types:
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       							__num_put_type;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Base constructor.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  their own stream buffer.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       explicit
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream(__streambuf_type* __sb)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { this->init(__sb); }
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Base destructor.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       virtual
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       ~basic_ostream() { }
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 23


  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /// Safe prefix/suffix operations.
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       class sentry;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       friend class sentry;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@{
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Interface for manipulators.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  information, see the iomanip header.
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// DR 60. What is a formatted input function?
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return __pf(*this);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// DR 60. What is a formatted input function?
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__pf(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return *this;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// DR 60. What is a formatted input function?
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__pf(*this);
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return *this;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@{
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @name Inserters
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  This can have several effects, concluding with the setting of a
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  status flag; see the sentry documentation for more.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If the sentry status is good, the function tries to generate
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  whatever data is appropriate for the type of the argument.
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 24


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  will be turned on in the stream's error state without causing an
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  be rethrown.
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@{
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief Integer arithmetic inserters
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __n A variable of builtin integral type.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  @c *this if successful
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  These functions use the stream's current locale (specifically, the
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(long __n)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__n); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(unsigned long __n)
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__n); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(bool __n)
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__n); }
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(short __n);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(unsigned short __n)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(int __n);
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(unsigned int __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(long long __n)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__n); }
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(unsigned long long __n)
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__n); }
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 25


 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@}
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@{
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Floating point arithmetic inserters
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __f A variable of builtin floating point type.
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  @c *this if successful
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  These functions use the stream's current locale (specifically, the
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(double __f)
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__f); }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(float __f)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return _M_insert(static_cast<double>(__f));
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(long double __f)
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__f); }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@}
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Pointer arithmetic inserters
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __p A variable of pointer type.
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  @c *this if successful
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  These functions use the stream's current locale (specifically, the
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(const void* __p)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_insert(__p); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #if __cplusplus >= 201703L
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(nullptr_t)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return *this << "nullptr"; }
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Extracting from another streambuf.
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __sb  A pointer to a streambuf
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  in that it also constructs a sentry object and has the same error
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  handling behavior.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 26


 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  until one of the following occurs:
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  - the input stream reaches end-of-file,
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *    character that would have been inserted is not extracted), or
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *    sets failbit in the error state
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If the function inserts no characters, failbit is set.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator<<(__streambuf_type* __sb);
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@}
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@{
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @name Unformatted Output Functions
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  All the unformatted output functions have some common behavior.
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Each starts by constructing a temporary object of type
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  for more.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If the sentry status is good, the function tries to generate
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  whatever data is appropriate for the type of the argument.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  without completing its actions.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Simple insertion.
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __c  The character to insert.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  *this
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Tries to insert @p __c.
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @note  This function is not overloaded on signed char and
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *         unsigned char.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       put(char_type __c);
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Core write functionality, without sentry.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __s  The array to insert.
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       void
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	if (__put != __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	  this->setstate(ios_base::badbit);
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 27


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Character string insertion.
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __s  The array to insert.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  *this
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  one of the following happens:
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  - @p __n characters are inserted
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *    will be set in the stream's error state)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @note  This function is not overloaded on signed char and
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *         unsigned char.
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       write(const char_type* __s, streamsize __n);
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       //@}
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Synchronizing the stream buffer.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  *this
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  sets badbit.
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       flush();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Getting the current write position.
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  A file position object.
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       pos_type
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       tellp();
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Changing the current write position.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __pos  A file position object.
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  *this
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  that function fails, sets failbit.
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       __ostream_type&
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       seekp(pos_type);
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Changing the current write position.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 28


 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __off  A file offset object.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __dir  The direction in which to seek.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  *this
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If that function fails, sets failbit.
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        __ostream_type&
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       seekp(off_type, ios_base::seekdir);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     protected:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream()
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { this->init(0); }
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #if __cplusplus >= 201103L
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       // Non-standard constructor that does not call init()
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       : __ios_type()
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { __ios_type::move(__rhs); }
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       // 27.7.3.3 Assign/swap
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream&
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator=(basic_ostream&& __rhs)
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	swap(__rhs);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	return *this;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       void
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       swap(basic_ostream& __rhs)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { __ios_type::swap(__rhs); }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       template<typename _ValueT>
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__ostream_type&
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	_M_insert(_ValueT __v);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     };
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Performs setup work for output streams.
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  Objects of this class are created before all of the standard
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  suffix operations</em>.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template <typename _CharT, typename _Traits>
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     {
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       // Data Members.
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       bool 				_M_ok;
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 29


 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     public:
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  The constructor performs preparatory work.
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @param  __os  The output stream to guard.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  is called to synchronize the output sequences.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  true (@a okay).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       explicit
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #pragma GCC diagnostic push
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Possibly flushes the stream.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @c flush() on the output stream.
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       ~sentry()
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	// XXX MT
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	  {
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	  }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       }
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #pragma GCC diagnostic pop
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       /**
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @brief  Quick status checking.
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  @return  The sentry state.
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****        *  return value is that of the sentry state (true == okay).
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       */
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #if __cplusplus >= 201103L
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       explicit
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       operator bool() const
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       { return _M_ok; }
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     };
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   //@{
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Character inserters
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @param  __out  An output stream.
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @param  __c  A character.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 30


 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @return  out
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  status, this function inserts a single character and any required
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  called.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @c char, the character is widened before insertion.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return (__out << __out.widen(__c)); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // Specialization
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits>&
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // Signed and unsigned
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits>&
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return (__out << static_cast<char>(__c)); }
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits>&
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return (__out << static_cast<char>(__c)); }
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #if __cplusplus > 201703L
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // The following deleted overloads prevent formatting character values as
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // numeric values.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, wchar_t) = delete;
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, char8_t) = delete;
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, char16_t) = delete;
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 31


 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, char32_t) = delete;
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char8_t) = delete;
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_CHAR8_T
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char16_t) = delete;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char32_t) = delete;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // C++20
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   //@}
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   //@{
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  String inserters
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @param  __out  An output stream.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @param  __s  A character string.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @return  out
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @pre  @p __s must be a non-NULL pointer
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     {
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       if (!__s)
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__out.setstate(ios_base::badbit);
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       else
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__ostream_insert(__out, __s,
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       return __out;
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     }
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<_CharT, _Traits> &
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // Partial specializations
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits>&
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 32


  70              		.loc 3 606 5 view .LVU7
  71              		.loc 3 606 5 is_stmt 0 view .LVU8
  72              	.LBE52:
  73              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_traits
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 33


  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 34


 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 35


 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 36


 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 37


 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 38


 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
  74              		.loc 4 357 2 is_stmt 1 view .LVU9
   4:Effect.cpp    ****         if (sizeof(_thresholds) / sizeof(_thresholds[0]) != 7){         //controls that the size of
  75              		.loc 2 4 41 is_stmt 0 view .LVU10
  76 0000 10B5     		push	{r4, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
  80              	.LBB54:
  81              	.LBB53:
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     {
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       if (!__s)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__out.setstate(ios_base::badbit);
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       else
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 	__ostream_insert(__out, __s,
  82              		.loc 3 611 18 view .LVU11
  83 0002 134C     		ldr	r4, .L10
  84 0004 1A22     		movs	r2, #26
  85 0006 1349     		ldr	r1, .L10+4
  86              	.LVL3:
  87              		.loc 3 611 18 view .LVU12
  88 0008 2046     		mov	r0, r4
  89              	.LVL4:
  90              		.loc 3 611 18 view .LVU13
  91 000a FFF7FEFF 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i
  92              	.LVL5:
  93              		.loc 3 611 18 view .LVU14
  94              	.LBE53:
  95              	.LBE54:
  96              	.LBB55:
  97              	.LBI55:
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       {
  98              		.loc 3 108 7 is_stmt 1 view .LVU15
  99              	.LBB56:
 100              	.LBI56:
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****       return __out;
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 39


 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // Signed and unsigned
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits>&
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<char, _Traits> &
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #if __cplusplus > 201703L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    // The following deleted overloads prevent formatting strings as
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    // pointer values.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, const wchar_t*) = delete;
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, const char8_t*) = delete;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_CHAR8_T
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, const char16_t*) = delete;
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<char, _Traits>&
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<char, _Traits>&, const char32_t*) = delete;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char8_t*) = delete;
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char16_t*) = delete;
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _Traits>
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     basic_ostream<wchar_t, _Traits>&
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char32_t*) = delete;
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** #endif // C++20
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   //@}
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   // Standard basic_ostream manipulators
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Write a newline and flush the stream.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 40


 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  desired, leading to poor buffering performance.  See
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  for more on this subject.
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 101              		.loc 3 681 5 view .LVU16
 102              	.LBB57:
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 103              		.loc 3 682 19 is_stmt 0 view .LVU17
 104 000e 2368     		ldr	r3, [r4]
 105 0010 53F80C0C 		ldr	r0, [r3, #-12]
 106 0014 2044     		add	r0, r0, r4
 107 0016 C46F     		ldr	r4, [r0, #124]
 108              	.LVL6:
 109              	.LBB58:
 110              	.LBI58:
 111              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_ios.h
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** /** @file bits/basic_ios.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #ifndef _BASIC_IOS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #define _BASIC_IOS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #include <bits/localefwd.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #include <bits/locale_classes.h>
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 41


  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #include <bits/locale_facets.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #include <bits/move.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****   template<typename _Facet>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     inline const _Facet&
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     __check_facet(const _Facet* __f)
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       if (!__f)
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	__throw_bad_cast();
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       return *__f;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     }
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  stream classes. 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  @ingroup io
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *                   char_traits<_CharT>.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****   */
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     class basic_ios : public ios_base
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     public:
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@{
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef _CharT                                 char_type;
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef _Traits                                traits_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@}
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@{
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  These are non-standard types.
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 						     __num_put_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 						     __num_get_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@}
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 42


  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Data members:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     protected:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       mutable char_type                              _M_fill;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // For ostream.
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // For istream.
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     public:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@{
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  This allows you to write constructs such as
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #if __cplusplus >= 201103L
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       explicit operator bool() const
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return !this->fail(); }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #else
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       operator void*() const
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** #endif
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bool
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       operator!() const
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return this->fail(); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       //@}
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       iostate
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       rdstate() const
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return _M_streambuf_state; }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  users will not need to pass an argument.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       clear(iostate __state = goodbit);
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 43


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       void
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       setstate(iostate __state)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // exceptions().
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       void
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       _M_setstate(iostate __state)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	_M_streambuf_state |= __state;
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	if (this->exceptions() & __state)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	  __throw_exception_again;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Fast error checking.
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  True if no error flags are set.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  A wrapper around rdstate.
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bool
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       good() const
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return this->rdstate() == 0; }
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Fast error checking.
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  True if the eofbit is set.
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bool
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       eof() const
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Fast error checking.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bool
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       fail() const
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Fast error checking.
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  True if the badbit is set.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 44


 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bool
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       bad() const
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The current exceptions mask.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       iostate
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       exceptions() const
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return _M_exception; }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  in the error flags, then an exception of type
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  following under GCC 3.1 or later:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @code
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  #include <iostream>
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  #include <fstream>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  #include <exception>
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  int main()
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  {
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @endcode
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       exceptions(iostate __except)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       {
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****         _M_exception = __except;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****         this->clear(_M_streambuf_state);
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Constructor/destructor:
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 45


 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  The parameter is passed by derived streams.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       explicit
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { this->init(__sb); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Empty.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       virtual
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       ~basic_ios() { }
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Members:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *           not tied.
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       tie() const
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return _M_tie; }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *           was not tied.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       {
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****         _M_tie = __tiestr;
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****         return __old;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       }
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The current stream buffer.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  This does not change the state of the stream.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       rdbuf() const
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 46


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return _M_streambuf; }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The previous stream buffer.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  error state.
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  derived class.  For example:
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @code
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  std::streambuf*  p = .....;
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @endcode
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  Reference to this object.
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       basic_ios&
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The current fill character.
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       char_type
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       fill() const
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	if (!_M_fill_init)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	  {
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	    _M_fill_init = true;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	  }
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	return _M_fill;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       }
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 47


 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __ch  The new character.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The previous fill character.
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       char_type
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       fill(char_type __ch)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	char_type __old = this->fill();
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	_M_fill = __ch;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	return __old;
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       // Locales:
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Moves to a new locale.
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __loc  The new locale.
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The previous locale.
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Additional l10n notes are at
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       locale
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       imbue(const locale& __loc);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Squeezes characters.
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __c  The character to narrow.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The narrowed character.
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  if possible.
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Returns the result of
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @code
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @endcode
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Additional l10n notes are at
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       char
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       /**
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @brief  Widens characters.
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @param  __c  The character to widen.
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 48


 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @return  The widened character.
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Returns the result of
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @code
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  @endcode
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  Additional l10n notes are at
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       */
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       char_type
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       widen(char __c) const
 112              		.loc 5 449 7 is_stmt 1 view .LVU18
 113              	.LBB59:
 114              	.LBI59:
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****     {
 115              		.loc 5 47 5 view .LVU19
 116              	.LBB60:
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	__throw_bad_cast();
 117              		.loc 5 49 7 is_stmt 0 view .LVU20
 118 0018 BCB1     		cbz	r4, .L9
 119              	.LVL7:
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h **** 	__throw_bad_cast();
 120              		.loc 5 49 7 view .LVU21
 121              	.LBE60:
 122              	.LBE59:
 123              	.LBB62:
 124              	.LBI62:
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
 125              		.loc 1 872 7 is_stmt 1 view .LVU22
 126              	.LBB63:
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 127              		.loc 1 874 2 view .LVU23
 128 001a 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 129 001c 43B1     		cbz	r3, .L5
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	this->_M_widen_init();
 130              		.loc 1 875 4 view .LVU24
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	this->_M_widen_init();
 131              		.loc 1 875 51 is_stmt 0 view .LVU25
 132 001e 94F82710 		ldrb	r1, [r4, #39]	@ zero_extendqisi2
 133              	.LVL8:
 134              	.L6:
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	this->_M_widen_init();
 135              		.loc 1 875 51 view .LVU26
 136              	.LBE63:
 137              	.LBE62:
 138              	.LBE58:
 139              		.loc 3 682 19 view .LVU27
 140 0022 0B48     		ldr	r0, .L10
 141 0024 FFF7FEFF 		bl	_ZNSo3putEc
 142              	.LVL9:
 143              	.LBB69:
 144              	.LBI69:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 49


 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Write a null character into the output sequence.
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  string terminator.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return __os.put(_CharT()); }
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   /**
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  @brief  Flushes the output stream.
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   */
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****   template<typename _CharT, typename _Traits>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     inline basic_ostream<_CharT, _Traits>&
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 145              		.loc 3 703 5 is_stmt 1 view .LVU28
 146              	.LBE69:
 147              	.LBE57:
 148              	.LBE56:
 149              	.LBE55:
   7:Effect.cpp    ****         } else {
   8:Effect.cpp    ****             _thresholds = thresholdsI;
   9:Effect.cpp    ****             _gate = false; //initialize the gate to false
  10:Effect.cpp    ****             _raw_value = 0; //initialize the raw value to 0
  11:Effect.cpp    ****         }
  12:Effect.cpp    ****         
  13:Effect.cpp    ****     }
 150              		.loc 2 13 5 is_stmt 0 view .LVU29
 151 0028 BDE81040 		pop	{r4, lr}
 152              		.cfi_remember_state
 153              		.cfi_restore 14
 154              		.cfi_restore 4
 155              		.cfi_def_cfa_offset 0
 156              	.LBB75:
 157              	.LBB74:
 158              	.LBB73:
 159              	.LBB71:
 160              	.LBB70:
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ostream ****     { return __os.flush(); }
 161              		.loc 3 704 24 view .LVU30
 162 002c FFF7FEBF 		b	_ZNSo5flushEv
 163              	.LVL10:
 164              	.L5:
 165              		.cfi_restore_state
 166              		.loc 3 704 24 view .LVU31
 167              	.LBE70:
 168              	.LBE71:
 169              	.LBB72:
 170              	.LBB67:
 171              	.LBB66:
 172              	.LBB64:
 173              	.LBI64:
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       {
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 50


 174              		.loc 1 872 7 is_stmt 1 view .LVU32
 175              	.LBB65:
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_widen(__c);
 176              		.loc 1 876 2 view .LVU33
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_widen(__c);
 177              		.loc 1 876 21 is_stmt 0 view .LVU34
 178 0030 2046     		mov	r0, r4
 179              	.LVL11:
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h **** 	return this->do_widen(__c);
 180              		.loc 1 876 21 view .LVU35
 181 0032 FFF7FEFF 		bl	_ZNKSt5ctypeIcE13_M_widen_initEv
 182              	.LVL12:
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 183              		.loc 1 877 2 is_stmt 1 view .LVU36
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 184              		.loc 1 877 27 is_stmt 0 view .LVU37
 185 0036 2368     		ldr	r3, [r4]
 186 0038 074A     		ldr	r2, .L10+8
 187 003a 0A21     		movs	r1, #10
 188 003c 9B69     		ldr	r3, [r3, #24]
 189 003e 9342     		cmp	r3, r2
 190 0040 EFD0     		beq	.L6
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 191              		.loc 1 877 23 view .LVU38
 192 0042 2046     		mov	r0, r4
 193 0044 9847     		blx	r3
 194              	.LVL13:
 195 0046 0146     		mov	r1, r0
 196 0048 EBE7     		b	.L6
 197              	.LVL14:
 198              	.L9:
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\locale_facets.h ****       }
 199              		.loc 1 877 23 view .LVU39
 200              	.LBE65:
 201              	.LBE64:
 202              	.LBE66:
 203              	.LBE67:
 204              	.LBB68:
 205              	.LBB61:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       return *__f;
 206              		.loc 5 50 18 view .LVU40
 207 004a FFF7FEFF 		bl	_ZSt16__throw_bad_castv
 208              	.LVL15:
 209              	.L11:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_ios.h ****       return *__f;
 210              		.loc 5 50 18 view .LVU41
 211 004e 00BF     		.align	2
 212              	.L10:
 213 0050 00000000 		.word	_ZSt4cout
 214 0054 00000000 		.word	.LC0
 215 0058 00000000 		.word	_ZNKSt5ctypeIcE8do_widenEc
 216              	.LBE61:
 217              	.LBE68:
 218              	.LBE72:
 219              	.LBE73:
 220              	.LBE74:
 221              	.LBE75:
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 51


 222              		.cfi_endproc
 223              	.LFE2096:
 225              		.section	.text._ZN6Effect15analogCoeffFineEt,"ax",%progbits
 226              		.align	1
 227              		.p2align 2,,3
 228              		.global	_ZN6Effect15analogCoeffFineEt
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-d16
 234              	_ZN6Effect15analogCoeffFineEt:
 235              	.LVL16:
 236              	.LFB2097:
  14:Effect.cpp    **** 
  15:Effect.cpp    **** 
  16:Effect.cpp    **** 
  17:Effect.cpp    **** 
  18:Effect.cpp    **** 
  19:Effect.cpp    ****     float Effect::analogCoeffFine(uint16_t value) { /*
 237              		.loc 2 19 51 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
  20:Effect.cpp    ****                                                         _coeff is a fixed values array which serve 
  21:Effect.cpp    ****                                                         This way we don't have a single function wh
  22:Effect.cpp    ****                                                         But a normalization with a different slope 
  23:Effect.cpp    ****                                                         because the values read from the various sp
  24:Effect.cpp    ****                                                         to have a slightly better modulation
  25:Effect.cpp    ****                                                         */
  26:Effect.cpp    ****         float output=-1;
 242              		.loc 2 26 9 view .LVU43
  27:Effect.cpp    ****         if(_thresholds[0]<=value && value <_thresholds[2])     //_thresholds[0] otherwise we can ha
 243              		.loc 2 27 9 view .LVU44
 244              		.loc 2 27 12 is_stmt 0 view .LVU45
 245 0000 0368     		ldr	r3, [r0]
  19:Effect.cpp    ****                                                         _coeff is a fixed values array which serve 
 246              		.loc 2 19 51 view .LVU46
 247 0002 10B4     		push	{r4}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 4, -4
 250              		.loc 2 27 25 view .LVU47
 251 0004 1C68     		ldr	r4, [r3]
 252              		.loc 2 27 57 view .LVU48
 253 0006 9A68     		ldr	r2, [r3, #8]
 254              		.loc 2 27 9 view .LVU49
 255 0008 8C42     		cmp	r4, r1
 256 000a 1FDC     		bgt	.L13
 257              		.loc 2 27 34 discriminator 1 view .LVU50
 258 000c 9142     		cmp	r1, r2
 259 000e 2DDA     		bge	.L14
  28:Effect.cpp    ****         {                                                      
  29:Effect.cpp    ****             output= value*(_coeff[1]-_coeff[0])/(_thresholds[2]-_thresholds[0]);   
 260              		.loc 2 29 13 is_stmt 1 view .LVU51
 261              		.loc 2 29 26 is_stmt 0 view .LVU52
 262 0010 07EE901A 		vmov	s15, r1	@ int
 263              		.loc 2 29 37 view .LVU53
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 52


 264 0014 D0ED026A 		vldr.32	s13, [r0, #8]
 265 0018 90ED017A 		vldr.32	s14, [r0, #4]
 266              		.loc 2 29 64 view .LVU54
 267 001c 121B     		subs	r2, r2, r4
 268              		.loc 2 29 26 view .LVU55
 269 001e F8EEE77A 		vcvt.f32.s32	s15, s15
 270              	.L27:
  30:Effect.cpp    ****         }   else if(_thresholds[2]<=value && value<_thresholds[3])                 
  31:Effect.cpp    ****         {                                                                  
  32:Effect.cpp    ****             output= value*(_coeff[2]-_coeff[1])/(_thresholds[3]-_thresholds[2]);   
 271              		.loc 2 32 37 view .LVU56
 272 0022 76EEC76A 		vsub.f32	s13, s13, s14
 273              		.loc 2 32 48 view .LVU57
 274 0026 07EE102A 		vmov	s14, r2	@ int
 275 002a B8EEC77A 		vcvt.f32.s32	s14, s14
 276              		.loc 2 32 26 view .LVU58
 277 002e 66EEA77A 		vmul.f32	s15, s13, s15
 278              		.loc 2 32 19 view .LVU59
 279 0032 87EE870A 		vdiv.f32	s0, s15, s14
 280              	.LVL17:
 281              	.L15:
  33:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
  34:Effect.cpp    ****         {
  35:Effect.cpp    ****             output= value*(_coeff[3]-_coeff[2])/(_thresholds[4]-_thresholds[3]);
  36:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
  37:Effect.cpp    ****         {
  38:Effect.cpp    ****             output= value*(_coeff[4]-_coeff[3])/(_thresholds[5]-_thresholds[4]);
  39:Effect.cpp    ****         }   else if(_thresholds[5]<=value )
  40:Effect.cpp    ****         {
  41:Effect.cpp    ****             output= value*(_coeff[5]-_coeff[4])/(_thresholds[6]-_thresholds[5]);
  42:Effect.cpp    ****         }
  43:Effect.cpp    ****         if (output>1)  //if the values are out of scale, it returns the max
 282              		.loc 2 43 9 is_stmt 1 view .LVU60
  44:Effect.cpp    ****             return 1;
  45:Effect.cpp    ****         return output;
  46:Effect.cpp    ****     }
 283              		.loc 2 46 5 is_stmt 0 view .LVU61
 284 0036 5DF8044B 		ldr	r4, [sp], #4
 285              		.cfi_remember_state
 286              		.cfi_restore 4
 287              		.cfi_def_cfa_offset 0
  43:Effect.cpp    ****             return 1;
 288              		.loc 2 43 9 view .LVU62
 289 003a F7EE007A 		vmov.f32	s15, #1.0e+0
  44:Effect.cpp    ****             return 1;
 290              		.loc 2 44 20 view .LVU63
 291 003e B4EE670A 		vcmp.f32	s0, s15
 292 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 293 0046 37FE800A 		vselgt.f32	s0, s15, s0
 294              	.LVL18:
 295              		.loc 2 46 5 view .LVU64
 296 004a 7047     		bx	lr
 297              	.LVL19:
 298              	.L13:
 299              		.cfi_restore_state
  30:Effect.cpp    ****         {                                                                  
 300              		.loc 2 30 18 is_stmt 1 view .LVU65
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 53


 301 004c 9142     		cmp	r1, r2
 302 004e 0DDA     		bge	.L14
  30:Effect.cpp    ****         {                                                                  
 303              		.loc 2 30 65 is_stmt 0 view .LVU66
 304 0050 DC68     		ldr	r4, [r3, #12]
  33:Effect.cpp    ****         {
 305              		.loc 2 33 18 is_stmt 1 view .LVU67
 306 0052 A142     		cmp	r1, r4
 307 0054 17DA     		bge	.L17
  33:Effect.cpp    ****         {
 308              		.loc 2 33 65 is_stmt 0 view .LVU68
 309 0056 1A69     		ldr	r2, [r3, #16]
  36:Effect.cpp    ****         {
 310              		.loc 2 36 18 is_stmt 1 view .LVU69
 311 0058 9142     		cmp	r1, r2
 312 005a 21DA     		bge	.L19
  36:Effect.cpp    ****         {
 313              		.loc 2 36 65 is_stmt 0 view .LVU70
 314 005c 5C69     		ldr	r4, [r3, #20]
  39:Effect.cpp    ****         {
 315              		.loc 2 39 18 is_stmt 1 view .LVU71
 316 005e A142     		cmp	r1, r4
 317 0060 26DA     		bge	.L21
  26:Effect.cpp    ****         if(_thresholds[0]<=value && value <_thresholds[2])     //_thresholds[0] otherwise we can ha
 318              		.loc 2 26 15 is_stmt 0 view .LVU72
 319 0062 BFEE000A 		vmov.f32	s0, #-1.0e+0
 320              	.LVL20:
 321              		.loc 2 46 5 view .LVU73
 322 0066 5DF8044B 		ldr	r4, [sp], #4
 323              		.cfi_remember_state
 324              		.cfi_restore 4
 325              		.cfi_def_cfa_offset 0
 326 006a 7047     		bx	lr
 327              	.LVL21:
 328              	.L14:
 329              		.cfi_restore_state
  30:Effect.cpp    ****         {                                                                  
 330              		.loc 2 30 65 discriminator 1 view .LVU74
 331 006c DC68     		ldr	r4, [r3, #12]
  30:Effect.cpp    ****         {                                                                  
 332              		.loc 2 30 43 discriminator 1 view .LVU75
 333 006e A142     		cmp	r1, r4
 334 0070 09DA     		bge	.L17
  32:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
 335              		.loc 2 32 13 is_stmt 1 view .LVU76
  32:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
 336              		.loc 2 32 37 is_stmt 0 view .LVU77
 337 0072 D0ED036A 		vldr.32	s13, [r0, #12]
 338 0076 90ED027A 		vldr.32	s14, [r0, #8]
 339              	.L28:
  32:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
 340              		.loc 2 32 26 view .LVU78
 341 007a 07EE901A 		vmov	s15, r1	@ int
  32:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
 342              		.loc 2 32 64 view .LVU79
 343 007e A21A     		subs	r2, r4, r2
  32:Effect.cpp    ****         }   else if(_thresholds[3]<=value && value<_thresholds[4])
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 54


 344              		.loc 2 32 26 view .LVU80
 345 0080 F8EEE77A 		vcvt.f32.s32	s15, s15
 346 0084 CDE7     		b	.L27
 347              	.L17:
  33:Effect.cpp    ****         {
 348              		.loc 2 33 65 discriminator 1 view .LVU81
 349 0086 1A69     		ldr	r2, [r3, #16]
  33:Effect.cpp    ****         {
 350              		.loc 2 33 43 discriminator 1 view .LVU82
 351 0088 9142     		cmp	r1, r2
 352 008a 09DA     		bge	.L19
  35:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
 353              		.loc 2 35 13 is_stmt 1 view .LVU83
  35:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
 354              		.loc 2 35 26 is_stmt 0 view .LVU84
 355 008c 07EE901A 		vmov	s15, r1	@ int
  35:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
 356              		.loc 2 35 37 view .LVU85
 357 0090 D0ED046A 		vldr.32	s13, [r0, #16]
 358 0094 90ED037A 		vldr.32	s14, [r0, #12]
  35:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
 359              		.loc 2 35 64 view .LVU86
 360 0098 121B     		subs	r2, r2, r4
  35:Effect.cpp    ****         }   else if(_thresholds[4]<=value && value<_thresholds[5])
 361              		.loc 2 35 26 view .LVU87
 362 009a F8EEE77A 		vcvt.f32.s32	s15, s15
 363 009e C0E7     		b	.L27
 364              	.L19:
  36:Effect.cpp    ****         {
 365              		.loc 2 36 65 discriminator 1 view .LVU88
 366 00a0 5C69     		ldr	r4, [r3, #20]
  36:Effect.cpp    ****         {
 367              		.loc 2 36 43 discriminator 1 view .LVU89
 368 00a2 A142     		cmp	r1, r4
 369 00a4 04DA     		bge	.L21
  38:Effect.cpp    ****         }   else if(_thresholds[5]<=value )
 370              		.loc 2 38 13 is_stmt 1 view .LVU90
  38:Effect.cpp    ****         }   else if(_thresholds[5]<=value )
 371              		.loc 2 38 37 is_stmt 0 view .LVU91
 372 00a6 D0ED056A 		vldr.32	s13, [r0, #20]
 373 00aa 90ED047A 		vldr.32	s14, [r0, #16]
 374 00ae E4E7     		b	.L28
 375              	.L21:
  41:Effect.cpp    ****         }
 376              		.loc 2 41 13 is_stmt 1 view .LVU92
  41:Effect.cpp    ****         }
 377              		.loc 2 41 37 is_stmt 0 view .LVU93
 378 00b0 90ED067A 		vldr.32	s14, [r0, #24]
  41:Effect.cpp    ****         }
 379              		.loc 2 41 26 view .LVU94
 380 00b4 07EE901A 		vmov	s15, r1	@ int
  41:Effect.cpp    ****         }
 381              		.loc 2 41 37 view .LVU95
 382 00b8 D0ED056A 		vldr.32	s13, [r0, #20]
  41:Effect.cpp    ****         }
 383              		.loc 2 41 64 view .LVU96
 384 00bc 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 55


  41:Effect.cpp    ****         }
 385              		.loc 2 41 26 view .LVU97
 386 00be F8EEE77A 		vcvt.f32.s32	s15, s15
  41:Effect.cpp    ****         }
 387              		.loc 2 41 37 view .LVU98
 388 00c2 37EE667A 		vsub.f32	s14, s14, s13
  41:Effect.cpp    ****         }
 389              		.loc 2 41 64 view .LVU99
 390 00c6 1B1B     		subs	r3, r3, r4
  41:Effect.cpp    ****         }
 391              		.loc 2 41 26 view .LVU100
 392 00c8 67EE277A 		vmul.f32	s15, s14, s15
  41:Effect.cpp    ****         }
 393              		.loc 2 41 48 view .LVU101
 394 00cc 07EE103A 		vmov	s14, r3	@ int
 395 00d0 B8EEC77A 		vcvt.f32.s32	s14, s14
  41:Effect.cpp    ****         }
 396              		.loc 2 41 19 view .LVU102
 397 00d4 87EE870A 		vdiv.f32	s0, s15, s14
 398              	.LVL22:
  41:Effect.cpp    ****         }
 399              		.loc 2 41 19 view .LVU103
 400 00d8 ADE7     		b	.L15
 401              		.cfi_endproc
 402              	.LFE2097:
 404 00da 00BF     		.section	.text._ZN6Effect19analogCoeffIgnorantEt,"ax",%progbits
 405              		.align	1
 406              		.p2align 2,,3
 407              		.global	_ZN6Effect19analogCoeffIgnorantEt
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu fpv5-d16
 413              	_ZN6Effect19analogCoeffIgnorantEt:
 414              	.LVL23:
 415              	.LFB2098:
  47:Effect.cpp    **** 
  48:Effect.cpp    ****     float Effect::analogCoeffIgnorant(uint16_t value){ //stupid normalization with only a scale
 416              		.loc 2 48 54 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
  49:Effect.cpp    ****         float output=-1;
 421              		.loc 2 49 9 view .LVU105
  50:Effect.cpp    ****         output = value*1/(_thresholds[6]-_thresholds[0]);
 422              		.loc 2 50 9 view .LVU106
 423              		.loc 2 50 27 is_stmt 0 view .LVU107
 424 0000 0268     		ldr	r2, [r0]
  51:Effect.cpp    ****         if (output>1) 
 425              		.loc 2 51 9 view .LVU108
 426 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
  50:Effect.cpp    ****         output = value*1/(_thresholds[6]-_thresholds[0]);
 427              		.loc 2 50 41 view .LVU109
 428 0006 9369     		ldr	r3, [r2, #24]
 429 0008 1268     		ldr	r2, [r2]
 430 000a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 56


  50:Effect.cpp    ****         output = value*1/(_thresholds[6]-_thresholds[0]);
 431              		.loc 2 50 25 view .LVU110
 432 000c 91FBF3F3 		sdiv	r3, r1, r3
 433 0010 07EE903A 		vmov	s15, r3	@ int
  50:Effect.cpp    ****         output = value*1/(_thresholds[6]-_thresholds[0]);
 434              		.loc 2 50 16 view .LVU111
 435 0014 F8EEE77A 		vcvt.f32.s32	s15, s15
 436              	.LVL24:
 437              		.loc 2 51 9 is_stmt 1 view .LVU112
  52:Effect.cpp    ****             return 1;
 438              		.loc 2 52 20 is_stmt 0 view .LVU113
 439 0018 F4EE407A 		vcmp.f32	s15, s0
 440 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  53:Effect.cpp    ****         return output;
  54:Effect.cpp    ****     }...
 441              		.loc 2 54 5 view .LVU114
 442 0020 30FE270A 		vselgt.f32	s0, s0, s15
 443 0024 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE2098:
 447 0026 00BF     		.section	.text.startup._GLOBAL__sub_I__ZN6Effect5beginEPi,"ax",%progbits
 448              		.align	1
 449              		.p2align 2,,3
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-d16
 455              	_GLOBAL__sub_I__ZN6Effect5beginEPi:
 456              	.LFB2599:
 457              		.loc 2 54 5 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              	.LBB78:
 462              	.LBI78:
 463              		.loc 2 54 5 view .LVU116
 464              	.LVL25:
 465              		.loc 2 54 5 is_stmt 0 view .LVU117
 466              	.LBE78:
 467 0000 10B5     		push	{r4, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 4, -8
 470              		.cfi_offset 14, -4
 471              	.LBB81:
 472              	.LBB79:
 473              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\iostream"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // Standard iostream objects -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // This library is distributed in the hope that it will be useful,
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 57


  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** /** @file include/iostream
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****  *  This is a Standard C++ Library header.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** //
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** //
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #define _GLIBCXX_IOSTREAM 1
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #pragma GCC system_header
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #include <bits/c++config.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #include <ostream>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #include <istream>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** {
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   /**
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  @name Standard Stream Objects
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  objects</em>.  For other declarations, see
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  They are required by default to cooperate with the global C
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  library's @c FILE streams, and to be available during program
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  startup and termination. For more information, see the section of the
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****    *  manual linked to above.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   //@{
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern istream cin;		/// Linked to standard input
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern ostream cout;		/// Linked to standard output
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern wistream wcin;		/// Linked to standard input
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern wostream wcout;	/// Linked to standard output
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 58


  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   //@}
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\iostream ****   static ios_base::Init __ioinit;
 474              		.loc 6 74 25 view .LVU118
 475 0002 054C     		ldr	r4, .L35
 476 0004 2046     		mov	r0, r4
 477 0006 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
 478              	.LVL26:
 479 000a 2046     		mov	r0, r4
 480 000c 034A     		ldr	r2, .L35+4
 481 000e 0449     		ldr	r1, .L35+8
 482              	.LBE79:
 483              	.LBE81:
 484              		.loc 2 54 5 view .LVU119
 485 0010 BDE81040 		pop	{r4, lr}
 486              		.cfi_restore 14
 487              		.cfi_restore 4
 488              		.cfi_def_cfa_offset 0
 489              	.LBB82:
 490              	.LBB80:
 491              		.loc 6 74 25 view .LVU120
 492 0014 FFF7FEBF 		b	__aeabi_atexit
 493              	.LVL27:
 494              	.L36:
 495              		.align	2
 496              	.L35:
 497 0018 00000000 		.word	.LANCHOR0
 498 001c 00000000 		.word	__dso_handle
 499 0020 00000000 		.word	_ZNSt8ios_base4InitD1Ev
 500              	.LBE80:
 501              	.LBE82:
 502              		.cfi_endproc
 503              	.LFE2599:
 505              		.section	.init_array,"aw",%init_array
 506              		.align	2
 507 0000 00000000 		.word	_GLOBAL__sub_I__ZN6Effect5beginEPi(target1)
 508              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 509              		.align	2
 510              		.set	.LANCHOR0,. + 0
 513              	_ZStL8__ioinit:
 514 0000 00       		.space	1
 515              		.text
 516              	.Letext0:
 517              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 518              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 519              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 520              		.file 10 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 521              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 522              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 523              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 524              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 525              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 526              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 527              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 59


 528              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 529              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 530              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 531              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 532              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 533              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 534              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\system_error"
 535              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ios_base.h
 536              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwctype"
 537              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ostream.tc
 538              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\iosfwd"
 539              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 540              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ostream_in
 541              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 542              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 543              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 544              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 545              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 546              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 547              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 548              		.file 38 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 549              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 550              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 551              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 552              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 553              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wctype.h"
 554              		.file 44 "Effect.h"
 555              		.file 45 "<built-in>"
ARM GAS  C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s 			page 60


DEFINED SYMBOLS
                            *ABS*:00000000 Effect.cpp
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:17     .text._ZNKSt5ctypeIcE8do_widenEc:00000000 $t
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:26     .text._ZNKSt5ctypeIcE8do_widenEc:00000000 _ZNKSt5ctypeIcE8do_widenEc
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:45     .rodata._ZN6Effect5beginEPi.str1.4:00000000 $d
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:49     .text._ZN6Effect5beginEPi:00000000 $t
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:57     .text._ZN6Effect5beginEPi:00000000 _ZN6Effect5beginEPi
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:213    .text._ZN6Effect5beginEPi:00000050 $d
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:226    .text._ZN6Effect15analogCoeffFineEt:00000000 $t
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:234    .text._ZN6Effect15analogCoeffFineEt:00000000 _ZN6Effect15analogCoeffFineEt
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:405    .text._ZN6Effect19analogCoeffIgnorantEt:00000000 $t
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:413    .text._ZN6Effect19analogCoeffIgnorantEt:00000000 _ZN6Effect19analogCoeffIgnorantEt
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:448    .text.startup._GLOBAL__sub_I__ZN6Effect5beginEPi:00000000 $t
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:455    .text.startup._GLOBAL__sub_I__ZN6Effect5beginEPi:00000000 _GLOBAL__sub_I__ZN6Effect5beginEPi
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:497    .text.startup._GLOBAL__sub_I__ZN6Effect5beginEPi:00000018 $d
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:506    .init_array:00000000 $d
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:509    .bss._ZStL8__ioinit:00000000 $d
C:\Users\matte\AppData\Local\Temp\cc7EC7Js.s:513    .bss._ZStL8__ioinit:00000000 _ZStL8__ioinit

UNDEFINED SYMBOLS
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_i
_ZNSo3putEc
_ZNSo5flushEv
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZSt16__throw_bad_castv
_ZSt4cout
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
__dso_handle
_ZNSt8ios_base4InitD1Ev
